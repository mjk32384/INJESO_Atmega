
Project_Gliding_Chute.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001962  000019f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001962  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800106  00800106  000019fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000019fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001a2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00001a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c99  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ca1  00000000  00000000  00003871  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d85  00000000  00000000  00004512  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000478  00000000  00000000  00005298  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000779  00000000  00000000  00005710  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a1e  00000000  00000000  00005e89  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  000078a7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a1 c6       	rjmp	.+3394   	; 0xd80 <__vector_15>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e6       	ldi	r30, 0x62	; 98
      a0:	f9 e1       	ldi	r31, 0x19	; 25
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 30       	cpi	r26, 0x06	; 6
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	a6 e0       	ldi	r26, 0x06	; 6
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a7 30       	cpi	r26, 0x07	; 7
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	6d d6       	rcall	.+3290   	; 0xd9e <main>
      c4:	0c 94 af 0c 	jmp	0x195e	; 0x195e <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <MadgwickAHRSupdate>:
#define SAMPLE_FREQ 64.0f // Sample frequency in Hz
#define BETA_DEF 0.8f      // 2 * proportional gain (Kp)

volatile float beta = BETA_DEF; // 2 * proportional gain (Kp)

void MadgwickAHRSupdate(float* q, float gx, float gy, float gz, float ax, float ay, float az, float mx, float my, float mz) {
      ca:	2f 92       	push	r2
      cc:	3f 92       	push	r3
      ce:	4f 92       	push	r4
      d0:	5f 92       	push	r5
      d2:	6f 92       	push	r6
      d4:	7f 92       	push	r7
      d6:	8f 92       	push	r8
      d8:	9f 92       	push	r9
      da:	af 92       	push	r10
      dc:	bf 92       	push	r11
      de:	cf 92       	push	r12
      e0:	df 92       	push	r13
      e2:	ef 92       	push	r14
      e4:	ff 92       	push	r15
      e6:	0f 93       	push	r16
      e8:	1f 93       	push	r17
      ea:	cf 93       	push	r28
      ec:	df 93       	push	r29
      ee:	cd b7       	in	r28, 0x3d	; 61
      f0:	de b7       	in	r29, 0x3e	; 62
      f2:	cc 56       	subi	r28, 0x6C	; 108
      f4:	d1 09       	sbc	r29, r1
      f6:	0f b6       	in	r0, 0x3f	; 63
      f8:	f8 94       	cli
      fa:	de bf       	out	0x3e, r29	; 62
      fc:	0f be       	out	0x3f, r0	; 63
      fe:	cd bf       	out	0x3d, r28	; 61
     100:	1c 01       	movw	r2, r24
     102:	21 96       	adiw	r28, 0x01	; 1
     104:	4c af       	std	Y+60, r20	; 0x3c
     106:	5d af       	std	Y+61, r21	; 0x3d
     108:	6e af       	std	Y+62, r22	; 0x3e
     10a:	7f af       	std	Y+63, r23	; 0x3f
     10c:	21 97       	sbiw	r28, 0x01	; 1
     10e:	25 96       	adiw	r28, 0x05	; 5
     110:	0c af       	std	Y+60, r16	; 0x3c
     112:	1d af       	std	Y+61, r17	; 0x3d
     114:	2e af       	std	Y+62, r18	; 0x3e
     116:	3f af       	std	Y+63, r19	; 0x3f
     118:	25 97       	sbiw	r28, 0x05	; 5
	float q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3];  // short name local variable for readability
     11a:	dc 01       	movw	r26, r24
     11c:	8d 91       	ld	r24, X+
     11e:	9d 91       	ld	r25, X+
     120:	0d 90       	ld	r0, X+
     122:	bc 91       	ld	r27, X
     124:	a0 2d       	mov	r26, r0
     126:	89 87       	std	Y+9, r24	; 0x09
     128:	9a 87       	std	Y+10, r25	; 0x0a
     12a:	ab 87       	std	Y+11, r26	; 0x0b
     12c:	bc 87       	std	Y+12, r27	; 0x0c
     12e:	f1 01       	movw	r30, r2
     130:	44 80       	ldd	r4, Z+4	; 0x04
     132:	55 80       	ldd	r5, Z+5	; 0x05
     134:	66 80       	ldd	r6, Z+6	; 0x06
     136:	77 80       	ldd	r7, Z+7	; 0x07
     138:	80 85       	ldd	r24, Z+8	; 0x08
     13a:	91 85       	ldd	r25, Z+9	; 0x09
     13c:	a2 85       	ldd	r26, Z+10	; 0x0a
     13e:	b3 85       	ldd	r27, Z+11	; 0x0b
     140:	8d 83       	std	Y+5, r24	; 0x05
     142:	9e 83       	std	Y+6, r25	; 0x06
     144:	af 83       	std	Y+7, r26	; 0x07
     146:	b8 87       	std	Y+8, r27	; 0x08
     148:	84 85       	ldd	r24, Z+12	; 0x0c
     14a:	95 85       	ldd	r25, Z+13	; 0x0d
     14c:	a6 85       	ldd	r26, Z+14	; 0x0e
     14e:	b7 85       	ldd	r27, Z+15	; 0x0f
     150:	8d 87       	std	Y+13, r24	; 0x0d
     152:	9e 87       	std	Y+14, r25	; 0x0e
     154:	af 87       	std	Y+15, r26	; 0x0f
     156:	b8 8b       	std	Y+16, r27	; 0x10
	float vx, vy, vz, wx, wy, wz;
	float ex, ey, ez;
	float pa, pb, pc;

	// Auxiliary variables to avoid repeated arithmetic
	float q1q1 = q1 * q1;
     158:	29 85       	ldd	r18, Y+9	; 0x09
     15a:	3a 85       	ldd	r19, Y+10	; 0x0a
     15c:	4b 85       	ldd	r20, Y+11	; 0x0b
     15e:	5c 85       	ldd	r21, Y+12	; 0x0c
     160:	ca 01       	movw	r24, r20
     162:	b9 01       	movw	r22, r18
     164:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     168:	65 96       	adiw	r28, 0x15	; 21
     16a:	6c af       	std	Y+60, r22	; 0x3c
     16c:	7d af       	std	Y+61, r23	; 0x3d
     16e:	8e af       	std	Y+62, r24	; 0x3e
     170:	9f af       	std	Y+63, r25	; 0x3f
     172:	65 97       	sbiw	r28, 0x15	; 21
	float q1q2 = q1 * q2;
     174:	a3 01       	movw	r20, r6
     176:	92 01       	movw	r18, r4
     178:	69 85       	ldd	r22, Y+9	; 0x09
     17a:	7a 85       	ldd	r23, Y+10	; 0x0a
     17c:	8b 85       	ldd	r24, Y+11	; 0x0b
     17e:	9c 85       	ldd	r25, Y+12	; 0x0c
     180:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     184:	69 ab       	std	Y+49, r22	; 0x31
     186:	7a ab       	std	Y+50, r23	; 0x32
     188:	8b ab       	std	Y+51, r24	; 0x33
     18a:	9c ab       	std	Y+52, r25	; 0x34
	float q1q3 = q1 * q3;
     18c:	2d 81       	ldd	r18, Y+5	; 0x05
     18e:	3e 81       	ldd	r19, Y+6	; 0x06
     190:	4f 81       	ldd	r20, Y+7	; 0x07
     192:	58 85       	ldd	r21, Y+8	; 0x08
     194:	69 85       	ldd	r22, Y+9	; 0x09
     196:	7a 85       	ldd	r23, Y+10	; 0x0a
     198:	8b 85       	ldd	r24, Y+11	; 0x0b
     19a:	9c 85       	ldd	r25, Y+12	; 0x0c
     19c:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     1a0:	6d ab       	std	Y+53, r22	; 0x35
     1a2:	7e ab       	std	Y+54, r23	; 0x36
     1a4:	8f ab       	std	Y+55, r24	; 0x37
     1a6:	98 af       	std	Y+56, r25	; 0x38
	float q1q4 = q1 * q4;
     1a8:	2d 85       	ldd	r18, Y+13	; 0x0d
     1aa:	3e 85       	ldd	r19, Y+14	; 0x0e
     1ac:	4f 85       	ldd	r20, Y+15	; 0x0f
     1ae:	58 89       	ldd	r21, Y+16	; 0x10
     1b0:	69 85       	ldd	r22, Y+9	; 0x09
     1b2:	7a 85       	ldd	r23, Y+10	; 0x0a
     1b4:	8b 85       	ldd	r24, Y+11	; 0x0b
     1b6:	9c 85       	ldd	r25, Y+12	; 0x0c
     1b8:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     1bc:	69 a7       	std	Y+41, r22	; 0x29
     1be:	7a a7       	std	Y+42, r23	; 0x2a
     1c0:	8b a7       	std	Y+43, r24	; 0x2b
     1c2:	9c a7       	std	Y+44, r25	; 0x2c
	float q2q2 = q2 * q2;
     1c4:	a3 01       	movw	r20, r6
     1c6:	92 01       	movw	r18, r4
     1c8:	c3 01       	movw	r24, r6
     1ca:	b2 01       	movw	r22, r4
     1cc:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     1d0:	29 96       	adiw	r28, 0x09	; 9
     1d2:	6c af       	std	Y+60, r22	; 0x3c
     1d4:	7d af       	std	Y+61, r23	; 0x3d
     1d6:	8e af       	std	Y+62, r24	; 0x3e
     1d8:	9f af       	std	Y+63, r25	; 0x3f
     1da:	29 97       	sbiw	r28, 0x09	; 9
	float q2q3 = q2 * q3;
     1dc:	2d 81       	ldd	r18, Y+5	; 0x05
     1de:	3e 81       	ldd	r19, Y+6	; 0x06
     1e0:	4f 81       	ldd	r20, Y+7	; 0x07
     1e2:	58 85       	ldd	r21, Y+8	; 0x08
     1e4:	c3 01       	movw	r24, r6
     1e6:	b2 01       	movw	r22, r4
     1e8:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     1ec:	69 af       	std	Y+57, r22	; 0x39
     1ee:	7a af       	std	Y+58, r23	; 0x3a
     1f0:	8b af       	std	Y+59, r24	; 0x3b
     1f2:	9c af       	std	Y+60, r25	; 0x3c
	float q2q4 = q2 * q4;
     1f4:	2d 85       	ldd	r18, Y+13	; 0x0d
     1f6:	3e 85       	ldd	r19, Y+14	; 0x0e
     1f8:	4f 85       	ldd	r20, Y+15	; 0x0f
     1fa:	58 89       	ldd	r21, Y+16	; 0x10
     1fc:	c3 01       	movw	r24, r6
     1fe:	b2 01       	movw	r22, r4
     200:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     204:	2d 96       	adiw	r28, 0x0d	; 13
     206:	6c af       	std	Y+60, r22	; 0x3c
     208:	7d af       	std	Y+61, r23	; 0x3d
     20a:	8e af       	std	Y+62, r24	; 0x3e
     20c:	9f af       	std	Y+63, r25	; 0x3f
     20e:	2d 97       	sbiw	r28, 0x0d	; 13
	float q3q3 = q3 * q3;
     210:	2d 81       	ldd	r18, Y+5	; 0x05
     212:	3e 81       	ldd	r19, Y+6	; 0x06
     214:	4f 81       	ldd	r20, Y+7	; 0x07
     216:	58 85       	ldd	r21, Y+8	; 0x08
     218:	ca 01       	movw	r24, r20
     21a:	b9 01       	movw	r22, r18
     21c:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     220:	6d a7       	std	Y+45, r22	; 0x2d
     222:	7e a7       	std	Y+46, r23	; 0x2e
     224:	8f a7       	std	Y+47, r24	; 0x2f
     226:	98 ab       	std	Y+48, r25	; 0x30
	float q3q4 = q3 * q4;
     228:	2d 85       	ldd	r18, Y+13	; 0x0d
     22a:	3e 85       	ldd	r19, Y+14	; 0x0e
     22c:	4f 85       	ldd	r20, Y+15	; 0x0f
     22e:	58 89       	ldd	r21, Y+16	; 0x10
     230:	6d 81       	ldd	r22, Y+5	; 0x05
     232:	7e 81       	ldd	r23, Y+6	; 0x06
     234:	8f 81       	ldd	r24, Y+7	; 0x07
     236:	98 85       	ldd	r25, Y+8	; 0x08
     238:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     23c:	61 96       	adiw	r28, 0x11	; 17
     23e:	6c af       	std	Y+60, r22	; 0x3c
     240:	7d af       	std	Y+61, r23	; 0x3d
     242:	8e af       	std	Y+62, r24	; 0x3e
     244:	9f af       	std	Y+63, r25	; 0x3f
     246:	61 97       	sbiw	r28, 0x11	; 17
	float q4q4 = q4 * q4;
     248:	2d 85       	ldd	r18, Y+13	; 0x0d
     24a:	3e 85       	ldd	r19, Y+14	; 0x0e
     24c:	4f 85       	ldd	r20, Y+15	; 0x0f
     24e:	58 89       	ldd	r21, Y+16	; 0x10
     250:	ca 01       	movw	r24, r20
     252:	b9 01       	movw	r22, r18
     254:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     258:	6d a3       	std	Y+37, r22	; 0x25
     25a:	7e a3       	std	Y+38, r23	; 0x26
     25c:	8f a3       	std	Y+39, r24	; 0x27
     25e:	98 a7       	std	Y+40, r25	; 0x28

	// Normalize accelerometer measurement
	norm = sqrtf(ax * ax + ay * ay + az * az);
     260:	a5 01       	movw	r20, r10
     262:	94 01       	movw	r18, r8
     264:	c5 01       	movw	r24, r10
     266:	b4 01       	movw	r22, r8
     268:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     26c:	69 83       	std	Y+1, r22	; 0x01
     26e:	7a 83       	std	Y+2, r23	; 0x02
     270:	8b 83       	std	Y+3, r24	; 0x03
     272:	9c 83       	std	Y+4, r25	; 0x04
     274:	cf 57       	subi	r28, 0x7F	; 127
     276:	df 4f       	sbci	r29, 0xFF	; 255
     278:	28 81       	ld	r18, Y
     27a:	39 81       	ldd	r19, Y+1	; 0x01
     27c:	4a 81       	ldd	r20, Y+2	; 0x02
     27e:	5b 81       	ldd	r21, Y+3	; 0x03
     280:	c1 58       	subi	r28, 0x81	; 129
     282:	d0 40       	sbci	r29, 0x00	; 0
     284:	ca 01       	movw	r24, r20
     286:	b9 01       	movw	r22, r18
     288:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     28c:	9b 01       	movw	r18, r22
     28e:	ac 01       	movw	r20, r24
     290:	69 81       	ldd	r22, Y+1	; 0x01
     292:	7a 81       	ldd	r23, Y+2	; 0x02
     294:	8b 81       	ldd	r24, Y+3	; 0x03
     296:	9c 81       	ldd	r25, Y+4	; 0x04
     298:	0e 94 ed 09 	call	0x13da	; 0x13da <__addsf3>
     29c:	69 83       	std	Y+1, r22	; 0x01
     29e:	7a 83       	std	Y+2, r23	; 0x02
     2a0:	8b 83       	std	Y+3, r24	; 0x03
     2a2:	9c 83       	std	Y+4, r25	; 0x04
     2a4:	cb 57       	subi	r28, 0x7B	; 123
     2a6:	df 4f       	sbci	r29, 0xFF	; 255
     2a8:	28 81       	ld	r18, Y
     2aa:	39 81       	ldd	r19, Y+1	; 0x01
     2ac:	4a 81       	ldd	r20, Y+2	; 0x02
     2ae:	5b 81       	ldd	r21, Y+3	; 0x03
     2b0:	c5 58       	subi	r28, 0x85	; 133
     2b2:	d0 40       	sbci	r29, 0x00	; 0
     2b4:	ca 01       	movw	r24, r20
     2b6:	b9 01       	movw	r22, r18
     2b8:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     2bc:	9b 01       	movw	r18, r22
     2be:	ac 01       	movw	r20, r24
     2c0:	69 81       	ldd	r22, Y+1	; 0x01
     2c2:	7a 81       	ldd	r23, Y+2	; 0x02
     2c4:	8b 81       	ldd	r24, Y+3	; 0x03
     2c6:	9c 81       	ldd	r25, Y+4	; 0x04
     2c8:	0e 94 ed 09 	call	0x13da	; 0x13da <__addsf3>
     2cc:	0e 94 07 0c 	call	0x180e	; 0x180e <sqrt>
     2d0:	69 83       	std	Y+1, r22	; 0x01
     2d2:	7a 83       	std	Y+2, r23	; 0x02
     2d4:	8b 83       	std	Y+3, r24	; 0x03
     2d6:	9c 83       	std	Y+4, r25	; 0x04
	if (norm == 0.0f) return; // handle NaN
     2d8:	20 e0       	ldi	r18, 0x00	; 0
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	a9 01       	movw	r20, r18
     2de:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__cmpsf2>
     2e2:	88 23       	and	r24, r24
     2e4:	09 f4       	brne	.+2      	; 0x2e8 <MadgwickAHRSupdate+0x21e>
     2e6:	27 c5       	rjmp	.+2638   	; 0xd36 <__LOCK_REGION_LENGTH__+0x936>
	norm = 1.0f / norm;
     2e8:	29 81       	ldd	r18, Y+1	; 0x01
     2ea:	3a 81       	ldd	r19, Y+2	; 0x02
     2ec:	4b 81       	ldd	r20, Y+3	; 0x03
     2ee:	5c 81       	ldd	r21, Y+4	; 0x04
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	70 e0       	ldi	r23, 0x00	; 0
     2f4:	80 e8       	ldi	r24, 0x80	; 128
     2f6:	9f e3       	ldi	r25, 0x3F	; 63
     2f8:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__divsf3>
     2fc:	69 83       	std	Y+1, r22	; 0x01
     2fe:	7a 83       	std	Y+2, r23	; 0x02
     300:	8b 83       	std	Y+3, r24	; 0x03
     302:	9c 83       	std	Y+4, r25	; 0x04
	ax *= norm;
     304:	9b 01       	movw	r18, r22
     306:	ac 01       	movw	r20, r24
     308:	c5 01       	movw	r24, r10
     30a:	b4 01       	movw	r22, r8
     30c:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     310:	69 96       	adiw	r28, 0x19	; 25
     312:	6c af       	std	Y+60, r22	; 0x3c
     314:	7d af       	std	Y+61, r23	; 0x3d
     316:	8e af       	std	Y+62, r24	; 0x3e
     318:	9f af       	std	Y+63, r25	; 0x3f
     31a:	69 97       	sbiw	r28, 0x19	; 25
	ay *= norm;
     31c:	29 81       	ldd	r18, Y+1	; 0x01
     31e:	3a 81       	ldd	r19, Y+2	; 0x02
     320:	4b 81       	ldd	r20, Y+3	; 0x03
     322:	5c 81       	ldd	r21, Y+4	; 0x04
     324:	cf 57       	subi	r28, 0x7F	; 127
     326:	df 4f       	sbci	r29, 0xFF	; 255
     328:	68 81       	ld	r22, Y
     32a:	79 81       	ldd	r23, Y+1	; 0x01
     32c:	8a 81       	ldd	r24, Y+2	; 0x02
     32e:	9b 81       	ldd	r25, Y+3	; 0x03
     330:	c1 58       	subi	r28, 0x81	; 129
     332:	d0 40       	sbci	r29, 0x00	; 0
     334:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     338:	6d 96       	adiw	r28, 0x1d	; 29
     33a:	6c af       	std	Y+60, r22	; 0x3c
     33c:	7d af       	std	Y+61, r23	; 0x3d
     33e:	8e af       	std	Y+62, r24	; 0x3e
     340:	9f af       	std	Y+63, r25	; 0x3f
     342:	6d 97       	sbiw	r28, 0x1d	; 29
	az *= norm;
     344:	29 81       	ldd	r18, Y+1	; 0x01
     346:	3a 81       	ldd	r19, Y+2	; 0x02
     348:	4b 81       	ldd	r20, Y+3	; 0x03
     34a:	5c 81       	ldd	r21, Y+4	; 0x04
     34c:	cb 57       	subi	r28, 0x7B	; 123
     34e:	df 4f       	sbci	r29, 0xFF	; 255
     350:	68 81       	ld	r22, Y
     352:	79 81       	ldd	r23, Y+1	; 0x01
     354:	8a 81       	ldd	r24, Y+2	; 0x02
     356:	9b 81       	ldd	r25, Y+3	; 0x03
     358:	c5 58       	subi	r28, 0x85	; 133
     35a:	d0 40       	sbci	r29, 0x00	; 0
     35c:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     360:	a1 96       	adiw	r28, 0x21	; 33
     362:	6c af       	std	Y+60, r22	; 0x3c
     364:	7d af       	std	Y+61, r23	; 0x3d
     366:	8e af       	std	Y+62, r24	; 0x3e
     368:	9f af       	std	Y+63, r25	; 0x3f
     36a:	a1 97       	sbiw	r28, 0x21	; 33

	// Normalize magnetometer measurement
	norm = sqrtf(mx * mx + my * my + mz * mz);
     36c:	c7 57       	subi	r28, 0x77	; 119
     36e:	df 4f       	sbci	r29, 0xFF	; 255
     370:	28 81       	ld	r18, Y
     372:	39 81       	ldd	r19, Y+1	; 0x01
     374:	4a 81       	ldd	r20, Y+2	; 0x02
     376:	5b 81       	ldd	r21, Y+3	; 0x03
     378:	c9 58       	subi	r28, 0x89	; 137
     37a:	d0 40       	sbci	r29, 0x00	; 0
     37c:	ca 01       	movw	r24, r20
     37e:	b9 01       	movw	r22, r18
     380:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     384:	4b 01       	movw	r8, r22
     386:	5c 01       	movw	r10, r24
     388:	c3 57       	subi	r28, 0x73	; 115
     38a:	df 4f       	sbci	r29, 0xFF	; 255
     38c:	28 81       	ld	r18, Y
     38e:	39 81       	ldd	r19, Y+1	; 0x01
     390:	4a 81       	ldd	r20, Y+2	; 0x02
     392:	5b 81       	ldd	r21, Y+3	; 0x03
     394:	cd 58       	subi	r28, 0x8D	; 141
     396:	d0 40       	sbci	r29, 0x00	; 0
     398:	ca 01       	movw	r24, r20
     39a:	b9 01       	movw	r22, r18
     39c:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     3a0:	9b 01       	movw	r18, r22
     3a2:	ac 01       	movw	r20, r24
     3a4:	c5 01       	movw	r24, r10
     3a6:	b4 01       	movw	r22, r8
     3a8:	0e 94 ed 09 	call	0x13da	; 0x13da <__addsf3>
     3ac:	4b 01       	movw	r8, r22
     3ae:	5c 01       	movw	r10, r24
     3b0:	cf 56       	subi	r28, 0x6F	; 111
     3b2:	df 4f       	sbci	r29, 0xFF	; 255
     3b4:	28 81       	ld	r18, Y
     3b6:	39 81       	ldd	r19, Y+1	; 0x01
     3b8:	4a 81       	ldd	r20, Y+2	; 0x02
     3ba:	5b 81       	ldd	r21, Y+3	; 0x03
     3bc:	c1 59       	subi	r28, 0x91	; 145
     3be:	d0 40       	sbci	r29, 0x00	; 0
     3c0:	ca 01       	movw	r24, r20
     3c2:	b9 01       	movw	r22, r18
     3c4:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     3c8:	9b 01       	movw	r18, r22
     3ca:	ac 01       	movw	r20, r24
     3cc:	c5 01       	movw	r24, r10
     3ce:	b4 01       	movw	r22, r8
     3d0:	0e 94 ed 09 	call	0x13da	; 0x13da <__addsf3>
     3d4:	0e 94 07 0c 	call	0x180e	; 0x180e <sqrt>
     3d8:	4b 01       	movw	r8, r22
     3da:	5c 01       	movw	r10, r24
	if (norm == 0.0f) return; // handle NaN
     3dc:	20 e0       	ldi	r18, 0x00	; 0
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	a9 01       	movw	r20, r18
     3e2:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__cmpsf2>
     3e6:	88 23       	and	r24, r24
     3e8:	09 f4       	brne	.+2      	; 0x3ec <MadgwickAHRSupdate+0x322>
     3ea:	a5 c4       	rjmp	.+2378   	; 0xd36 <__LOCK_REGION_LENGTH__+0x936>
	norm = 1.0f / norm;
     3ec:	a5 01       	movw	r20, r10
     3ee:	94 01       	movw	r18, r8
     3f0:	60 e0       	ldi	r22, 0x00	; 0
     3f2:	70 e0       	ldi	r23, 0x00	; 0
     3f4:	80 e8       	ldi	r24, 0x80	; 128
     3f6:	9f e3       	ldi	r25, 0x3F	; 63
     3f8:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__divsf3>
     3fc:	4b 01       	movw	r8, r22
     3fe:	5c 01       	movw	r10, r24
	mx *= norm;
     400:	9b 01       	movw	r18, r22
     402:	ac 01       	movw	r20, r24
     404:	c7 57       	subi	r28, 0x77	; 119
     406:	df 4f       	sbci	r29, 0xFF	; 255
     408:	68 81       	ld	r22, Y
     40a:	79 81       	ldd	r23, Y+1	; 0x01
     40c:	8a 81       	ldd	r24, Y+2	; 0x02
     40e:	9b 81       	ldd	r25, Y+3	; 0x03
     410:	c9 58       	subi	r28, 0x89	; 137
     412:	d0 40       	sbci	r29, 0x00	; 0
     414:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     418:	6d 8b       	std	Y+21, r22	; 0x15
     41a:	7e 8b       	std	Y+22, r23	; 0x16
     41c:	8f 8b       	std	Y+23, r24	; 0x17
     41e:	98 8f       	std	Y+24, r25	; 0x18
	my *= norm;
     420:	a5 01       	movw	r20, r10
     422:	94 01       	movw	r18, r8
     424:	c3 57       	subi	r28, 0x73	; 115
     426:	df 4f       	sbci	r29, 0xFF	; 255
     428:	68 81       	ld	r22, Y
     42a:	79 81       	ldd	r23, Y+1	; 0x01
     42c:	8a 81       	ldd	r24, Y+2	; 0x02
     42e:	9b 81       	ldd	r25, Y+3	; 0x03
     430:	cd 58       	subi	r28, 0x8D	; 141
     432:	d0 40       	sbci	r29, 0x00	; 0
     434:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     438:	69 8f       	std	Y+25, r22	; 0x19
     43a:	7a 8f       	std	Y+26, r23	; 0x1a
     43c:	8b 8f       	std	Y+27, r24	; 0x1b
     43e:	9c 8f       	std	Y+28, r25	; 0x1c
	mz *= norm;
     440:	a5 01       	movw	r20, r10
     442:	94 01       	movw	r18, r8
     444:	cf 56       	subi	r28, 0x6F	; 111
     446:	df 4f       	sbci	r29, 0xFF	; 255
     448:	68 81       	ld	r22, Y
     44a:	79 81       	ldd	r23, Y+1	; 0x01
     44c:	8a 81       	ldd	r24, Y+2	; 0x02
     44e:	9b 81       	ldd	r25, Y+3	; 0x03
     450:	c1 59       	subi	r28, 0x91	; 145
     452:	d0 40       	sbci	r29, 0x00	; 0
     454:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     458:	69 83       	std	Y+1, r22	; 0x01
     45a:	7a 83       	std	Y+2, r23	; 0x02
     45c:	8b 83       	std	Y+3, r24	; 0x03
     45e:	9c 83       	std	Y+4, r25	; 0x04

	// Reference direction of Earth's magnetic field
	hx = 2.0f * (mx * (0.5f - q3q3 - q4q4) + my * (q2q3 - q1q4) + mz * (q2q4 + q1q3));
     460:	2d a5       	ldd	r18, Y+45	; 0x2d
     462:	3e a5       	ldd	r19, Y+46	; 0x2e
     464:	4f a5       	ldd	r20, Y+47	; 0x2f
     466:	58 a9       	ldd	r21, Y+48	; 0x30
     468:	60 e0       	ldi	r22, 0x00	; 0
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	9f e3       	ldi	r25, 0x3F	; 63
     470:	b3 d7       	rcall	.+3942   	; 0x13d8 <__subsf3>
     472:	2d a1       	ldd	r18, Y+37	; 0x25
     474:	3e a1       	ldd	r19, Y+38	; 0x26
     476:	4f a1       	ldd	r20, Y+39	; 0x27
     478:	58 a5       	ldd	r21, Y+40	; 0x28
     47a:	ae d7       	rcall	.+3932   	; 0x13d8 <__subsf3>
     47c:	a5 96       	adiw	r28, 0x25	; 37
     47e:	6c af       	std	Y+60, r22	; 0x3c
     480:	7d af       	std	Y+61, r23	; 0x3d
     482:	8e af       	std	Y+62, r24	; 0x3e
     484:	9f af       	std	Y+63, r25	; 0x3f
     486:	a5 97       	sbiw	r28, 0x25	; 37
     488:	9b 01       	movw	r18, r22
     48a:	ac 01       	movw	r20, r24
     48c:	6d 89       	ldd	r22, Y+21	; 0x15
     48e:	7e 89       	ldd	r23, Y+22	; 0x16
     490:	8f 89       	ldd	r24, Y+23	; 0x17
     492:	98 8d       	ldd	r25, Y+24	; 0x18
     494:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     498:	4b 01       	movw	r8, r22
     49a:	5c 01       	movw	r10, r24
     49c:	29 a5       	ldd	r18, Y+41	; 0x29
     49e:	3a a5       	ldd	r19, Y+42	; 0x2a
     4a0:	4b a5       	ldd	r20, Y+43	; 0x2b
     4a2:	5c a5       	ldd	r21, Y+44	; 0x2c
     4a4:	69 ad       	ldd	r22, Y+57	; 0x39
     4a6:	7a ad       	ldd	r23, Y+58	; 0x3a
     4a8:	8b ad       	ldd	r24, Y+59	; 0x3b
     4aa:	9c ad       	ldd	r25, Y+60	; 0x3c
     4ac:	95 d7       	rcall	.+3882   	; 0x13d8 <__subsf3>
     4ae:	a9 96       	adiw	r28, 0x29	; 41
     4b0:	6c af       	std	Y+60, r22	; 0x3c
     4b2:	7d af       	std	Y+61, r23	; 0x3d
     4b4:	8e af       	std	Y+62, r24	; 0x3e
     4b6:	9f af       	std	Y+63, r25	; 0x3f
     4b8:	a9 97       	sbiw	r28, 0x29	; 41
     4ba:	9b 01       	movw	r18, r22
     4bc:	ac 01       	movw	r20, r24
     4be:	69 8d       	ldd	r22, Y+25	; 0x19
     4c0:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4c2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4c4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4c6:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     4ca:	9b 01       	movw	r18, r22
     4cc:	ac 01       	movw	r20, r24
     4ce:	c5 01       	movw	r24, r10
     4d0:	b4 01       	movw	r22, r8
     4d2:	83 d7       	rcall	.+3846   	; 0x13da <__addsf3>
     4d4:	4b 01       	movw	r8, r22
     4d6:	5c 01       	movw	r10, r24
     4d8:	2d 96       	adiw	r28, 0x0d	; 13
     4da:	2c ad       	ldd	r18, Y+60	; 0x3c
     4dc:	3d ad       	ldd	r19, Y+61	; 0x3d
     4de:	4e ad       	ldd	r20, Y+62	; 0x3e
     4e0:	5f ad       	ldd	r21, Y+63	; 0x3f
     4e2:	2d 97       	sbiw	r28, 0x0d	; 13
     4e4:	6d a9       	ldd	r22, Y+53	; 0x35
     4e6:	7e a9       	ldd	r23, Y+54	; 0x36
     4e8:	8f a9       	ldd	r24, Y+55	; 0x37
     4ea:	98 ad       	ldd	r25, Y+56	; 0x38
     4ec:	76 d7       	rcall	.+3820   	; 0x13da <__addsf3>
     4ee:	ad 96       	adiw	r28, 0x2d	; 45
     4f0:	6c af       	std	Y+60, r22	; 0x3c
     4f2:	7d af       	std	Y+61, r23	; 0x3d
     4f4:	8e af       	std	Y+62, r24	; 0x3e
     4f6:	9f af       	std	Y+63, r25	; 0x3f
     4f8:	ad 97       	sbiw	r28, 0x2d	; 45
     4fa:	9b 01       	movw	r18, r22
     4fc:	ac 01       	movw	r20, r24
     4fe:	69 81       	ldd	r22, Y+1	; 0x01
     500:	7a 81       	ldd	r23, Y+2	; 0x02
     502:	8b 81       	ldd	r24, Y+3	; 0x03
     504:	9c 81       	ldd	r25, Y+4	; 0x04
     506:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     50a:	9b 01       	movw	r18, r22
     50c:	ac 01       	movw	r20, r24
     50e:	c5 01       	movw	r24, r10
     510:	b4 01       	movw	r22, r8
     512:	63 d7       	rcall	.+3782   	; 0x13da <__addsf3>
     514:	9b 01       	movw	r18, r22
     516:	ac 01       	movw	r20, r24
     518:	60 d7       	rcall	.+3776   	; 0x13da <__addsf3>
     51a:	4b 01       	movw	r8, r22
     51c:	5c 01       	movw	r10, r24
	hy = 2.0f * (mx * (q2q3 + q1q4) + my * (0.5f - q2q2 - q4q4) + mz * (q3q4 - q1q2));
     51e:	29 ad       	ldd	r18, Y+57	; 0x39
     520:	3a ad       	ldd	r19, Y+58	; 0x3a
     522:	4b ad       	ldd	r20, Y+59	; 0x3b
     524:	5c ad       	ldd	r21, Y+60	; 0x3c
     526:	69 a5       	ldd	r22, Y+41	; 0x29
     528:	7a a5       	ldd	r23, Y+42	; 0x2a
     52a:	8b a5       	ldd	r24, Y+43	; 0x2b
     52c:	9c a5       	ldd	r25, Y+44	; 0x2c
     52e:	55 d7       	rcall	.+3754   	; 0x13da <__addsf3>
     530:	9b 01       	movw	r18, r22
     532:	ac 01       	movw	r20, r24
     534:	6d 89       	ldd	r22, Y+21	; 0x15
     536:	7e 89       	ldd	r23, Y+22	; 0x16
     538:	8f 89       	ldd	r24, Y+23	; 0x17
     53a:	98 8d       	ldd	r25, Y+24	; 0x18
     53c:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     540:	69 8b       	std	Y+17, r22	; 0x11
     542:	7a 8b       	std	Y+18, r23	; 0x12
     544:	8b 8b       	std	Y+19, r24	; 0x13
     546:	9c 8b       	std	Y+20, r25	; 0x14
     548:	29 96       	adiw	r28, 0x09	; 9
     54a:	2c ad       	ldd	r18, Y+60	; 0x3c
     54c:	3d ad       	ldd	r19, Y+61	; 0x3d
     54e:	4e ad       	ldd	r20, Y+62	; 0x3e
     550:	5f ad       	ldd	r21, Y+63	; 0x3f
     552:	29 97       	sbiw	r28, 0x09	; 9
     554:	60 e0       	ldi	r22, 0x00	; 0
     556:	70 e0       	ldi	r23, 0x00	; 0
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	9f e3       	ldi	r25, 0x3F	; 63
     55c:	3d d7       	rcall	.+3706   	; 0x13d8 <__subsf3>
     55e:	69 a7       	std	Y+41, r22	; 0x29
     560:	7a a7       	std	Y+42, r23	; 0x2a
     562:	8b a7       	std	Y+43, r24	; 0x2b
     564:	9c a7       	std	Y+44, r25	; 0x2c
     566:	2d a1       	ldd	r18, Y+37	; 0x25
     568:	3e a1       	ldd	r19, Y+38	; 0x26
     56a:	4f a1       	ldd	r20, Y+39	; 0x27
     56c:	58 a5       	ldd	r21, Y+40	; 0x28
     56e:	34 d7       	rcall	.+3688   	; 0x13d8 <__subsf3>
     570:	9b 01       	movw	r18, r22
     572:	ac 01       	movw	r20, r24
     574:	69 8d       	ldd	r22, Y+25	; 0x19
     576:	7a 8d       	ldd	r23, Y+26	; 0x1a
     578:	8b 8d       	ldd	r24, Y+27	; 0x1b
     57a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     57c:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     580:	9b 01       	movw	r18, r22
     582:	ac 01       	movw	r20, r24
     584:	69 89       	ldd	r22, Y+17	; 0x11
     586:	7a 89       	ldd	r23, Y+18	; 0x12
     588:	8b 89       	ldd	r24, Y+19	; 0x13
     58a:	9c 89       	ldd	r25, Y+20	; 0x14
     58c:	26 d7       	rcall	.+3660   	; 0x13da <__addsf3>
     58e:	69 8b       	std	Y+17, r22	; 0x11
     590:	7a 8b       	std	Y+18, r23	; 0x12
     592:	8b 8b       	std	Y+19, r24	; 0x13
     594:	9c 8b       	std	Y+20, r25	; 0x14
     596:	29 a9       	ldd	r18, Y+49	; 0x31
     598:	3a a9       	ldd	r19, Y+50	; 0x32
     59a:	4b a9       	ldd	r20, Y+51	; 0x33
     59c:	5c a9       	ldd	r21, Y+52	; 0x34
     59e:	61 96       	adiw	r28, 0x11	; 17
     5a0:	6c ad       	ldd	r22, Y+60	; 0x3c
     5a2:	7d ad       	ldd	r23, Y+61	; 0x3d
     5a4:	8e ad       	ldd	r24, Y+62	; 0x3e
     5a6:	9f ad       	ldd	r25, Y+63	; 0x3f
     5a8:	61 97       	sbiw	r28, 0x11	; 17
     5aa:	16 d7       	rcall	.+3628   	; 0x13d8 <__subsf3>
     5ac:	9b 01       	movw	r18, r22
     5ae:	ac 01       	movw	r20, r24
     5b0:	69 81       	ldd	r22, Y+1	; 0x01
     5b2:	7a 81       	ldd	r23, Y+2	; 0x02
     5b4:	8b 81       	ldd	r24, Y+3	; 0x03
     5b6:	9c 81       	ldd	r25, Y+4	; 0x04
     5b8:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     5bc:	9b 01       	movw	r18, r22
     5be:	ac 01       	movw	r20, r24
     5c0:	69 89       	ldd	r22, Y+17	; 0x11
     5c2:	7a 89       	ldd	r23, Y+18	; 0x12
     5c4:	8b 89       	ldd	r24, Y+19	; 0x13
     5c6:	9c 89       	ldd	r25, Y+20	; 0x14
     5c8:	08 d7       	rcall	.+3600   	; 0x13da <__addsf3>
     5ca:	9b 01       	movw	r18, r22
     5cc:	ac 01       	movw	r20, r24
     5ce:	05 d7       	rcall	.+3594   	; 0x13da <__addsf3>
     5d0:	69 8b       	std	Y+17, r22	; 0x11
     5d2:	7a 8b       	std	Y+18, r23	; 0x12
     5d4:	8b 8b       	std	Y+19, r24	; 0x13
     5d6:	9c 8b       	std	Y+20, r25	; 0x14
	bx = sqrtf((hx * hx) + (hy * hy));
     5d8:	a5 01       	movw	r20, r10
     5da:	94 01       	movw	r18, r8
     5dc:	c5 01       	movw	r24, r10
     5de:	b4 01       	movw	r22, r8
     5e0:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     5e4:	4b 01       	movw	r8, r22
     5e6:	5c 01       	movw	r10, r24
     5e8:	29 89       	ldd	r18, Y+17	; 0x11
     5ea:	3a 89       	ldd	r19, Y+18	; 0x12
     5ec:	4b 89       	ldd	r20, Y+19	; 0x13
     5ee:	5c 89       	ldd	r21, Y+20	; 0x14
     5f0:	ca 01       	movw	r24, r20
     5f2:	b9 01       	movw	r22, r18
     5f4:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     5f8:	9b 01       	movw	r18, r22
     5fa:	ac 01       	movw	r20, r24
     5fc:	c5 01       	movw	r24, r10
     5fe:	b4 01       	movw	r22, r8
     600:	ec d6       	rcall	.+3544   	; 0x13da <__addsf3>
     602:	0e 94 07 0c 	call	0x180e	; 0x180e <sqrt>
     606:	6d 8f       	std	Y+29, r22	; 0x1d
     608:	7e 8f       	std	Y+30, r23	; 0x1e
     60a:	8f 8f       	std	Y+31, r24	; 0x1f
     60c:	98 a3       	std	Y+32, r25	; 0x20
	bz = 2.0f * (mx * (q2q4 - q1q3) + my * (q3q4 + q1q2) + mz * (0.5f - q2q2 - q3q3));
     60e:	2d a9       	ldd	r18, Y+53	; 0x35
     610:	3e a9       	ldd	r19, Y+54	; 0x36
     612:	4f a9       	ldd	r20, Y+55	; 0x37
     614:	58 ad       	ldd	r21, Y+56	; 0x38
     616:	2d 96       	adiw	r28, 0x0d	; 13
     618:	6c ad       	ldd	r22, Y+60	; 0x3c
     61a:	7d ad       	ldd	r23, Y+61	; 0x3d
     61c:	8e ad       	ldd	r24, Y+62	; 0x3e
     61e:	9f ad       	ldd	r25, Y+63	; 0x3f
     620:	2d 97       	sbiw	r28, 0x0d	; 13
     622:	da d6       	rcall	.+3508   	; 0x13d8 <__subsf3>
     624:	69 8b       	std	Y+17, r22	; 0x11
     626:	7a 8b       	std	Y+18, r23	; 0x12
     628:	8b 8b       	std	Y+19, r24	; 0x13
     62a:	9c 8b       	std	Y+20, r25	; 0x14
     62c:	9b 01       	movw	r18, r22
     62e:	ac 01       	movw	r20, r24
     630:	6d 89       	ldd	r22, Y+21	; 0x15
     632:	7e 89       	ldd	r23, Y+22	; 0x16
     634:	8f 89       	ldd	r24, Y+23	; 0x17
     636:	98 8d       	ldd	r25, Y+24	; 0x18
     638:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     63c:	4b 01       	movw	r8, r22
     63e:	5c 01       	movw	r10, r24
     640:	61 96       	adiw	r28, 0x11	; 17
     642:	2c ad       	ldd	r18, Y+60	; 0x3c
     644:	3d ad       	ldd	r19, Y+61	; 0x3d
     646:	4e ad       	ldd	r20, Y+62	; 0x3e
     648:	5f ad       	ldd	r21, Y+63	; 0x3f
     64a:	61 97       	sbiw	r28, 0x11	; 17
     64c:	69 a9       	ldd	r22, Y+49	; 0x31
     64e:	7a a9       	ldd	r23, Y+50	; 0x32
     650:	8b a9       	ldd	r24, Y+51	; 0x33
     652:	9c a9       	ldd	r25, Y+52	; 0x34
     654:	c2 d6       	rcall	.+3460   	; 0x13da <__addsf3>
     656:	69 a3       	std	Y+33, r22	; 0x21
     658:	7a a3       	std	Y+34, r23	; 0x22
     65a:	8b a3       	std	Y+35, r24	; 0x23
     65c:	9c a3       	std	Y+36, r25	; 0x24
     65e:	9b 01       	movw	r18, r22
     660:	ac 01       	movw	r20, r24
     662:	69 8d       	ldd	r22, Y+25	; 0x19
     664:	7a 8d       	ldd	r23, Y+26	; 0x1a
     666:	8b 8d       	ldd	r24, Y+27	; 0x1b
     668:	9c 8d       	ldd	r25, Y+28	; 0x1c
     66a:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     66e:	9b 01       	movw	r18, r22
     670:	ac 01       	movw	r20, r24
     672:	c5 01       	movw	r24, r10
     674:	b4 01       	movw	r22, r8
     676:	b1 d6       	rcall	.+3426   	; 0x13da <__addsf3>
     678:	4b 01       	movw	r8, r22
     67a:	5c 01       	movw	r10, r24
     67c:	2d a5       	ldd	r18, Y+45	; 0x2d
     67e:	3e a5       	ldd	r19, Y+46	; 0x2e
     680:	4f a5       	ldd	r20, Y+47	; 0x2f
     682:	58 a9       	ldd	r21, Y+48	; 0x30
     684:	69 a5       	ldd	r22, Y+41	; 0x29
     686:	7a a5       	ldd	r23, Y+42	; 0x2a
     688:	8b a5       	ldd	r24, Y+43	; 0x2b
     68a:	9c a5       	ldd	r25, Y+44	; 0x2c
     68c:	a5 d6       	rcall	.+3402   	; 0x13d8 <__subsf3>
     68e:	69 ab       	std	Y+49, r22	; 0x31
     690:	7a ab       	std	Y+50, r23	; 0x32
     692:	8b ab       	std	Y+51, r24	; 0x33
     694:	9c ab       	std	Y+52, r25	; 0x34
     696:	9b 01       	movw	r18, r22
     698:	ac 01       	movw	r20, r24
     69a:	69 81       	ldd	r22, Y+1	; 0x01
     69c:	7a 81       	ldd	r23, Y+2	; 0x02
     69e:	8b 81       	ldd	r24, Y+3	; 0x03
     6a0:	9c 81       	ldd	r25, Y+4	; 0x04
     6a2:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__mulsf3>
     6a6:	9b 01       	movw	r18, r22
     6a8:	ac 01       	movw	r20, r24
     6aa:	c5 01       	movw	r24, r10
     6ac:	b4 01       	movw	r22, r8
     6ae:	95 d6       	rcall	.+3370   	; 0x13da <__addsf3>
     6b0:	9b 01       	movw	r18, r22
     6b2:	ac 01       	movw	r20, r24
     6b4:	92 d6       	rcall	.+3364   	; 0x13da <__addsf3>
     6b6:	6d ab       	std	Y+53, r22	; 0x35
     6b8:	7e ab       	std	Y+54, r23	; 0x36
     6ba:	8f ab       	std	Y+55, r24	; 0x37

	// Estimated direction of gravity and magnetic field
	vx = 2.0f * (q2q4 - q1q3);
     6bc:	98 af       	std	Y+56, r25	; 0x38
     6be:	29 89       	ldd	r18, Y+17	; 0x11
     6c0:	3a 89       	ldd	r19, Y+18	; 0x12
     6c2:	4b 89       	ldd	r20, Y+19	; 0x13
     6c4:	5c 89       	ldd	r21, Y+20	; 0x14
     6c6:	ca 01       	movw	r24, r20
     6c8:	b9 01       	movw	r22, r18
     6ca:	87 d6       	rcall	.+3342   	; 0x13da <__addsf3>
     6cc:	69 a7       	std	Y+41, r22	; 0x29
     6ce:	7a a7       	std	Y+42, r23	; 0x2a
     6d0:	8b a7       	std	Y+43, r24	; 0x2b
	vy = 2.0f * (q1q2 + q3q4);
     6d2:	9c a7       	std	Y+44, r25	; 0x2c
     6d4:	29 a1       	ldd	r18, Y+33	; 0x21
     6d6:	3a a1       	ldd	r19, Y+34	; 0x22
     6d8:	4b a1       	ldd	r20, Y+35	; 0x23
     6da:	5c a1       	ldd	r21, Y+36	; 0x24
     6dc:	ca 01       	movw	r24, r20
     6de:	b9 01       	movw	r22, r18
     6e0:	7c d6       	rcall	.+3320   	; 0x13da <__addsf3>
     6e2:	69 af       	std	Y+57, r22	; 0x39
     6e4:	7a af       	std	Y+58, r23	; 0x3a
     6e6:	8b af       	std	Y+59, r24	; 0x3b
	vz = q1q1 - q2q2 - q3q3 + q4q4;
     6e8:	9c af       	std	Y+60, r25	; 0x3c
     6ea:	29 96       	adiw	r28, 0x09	; 9
     6ec:	2c ad       	ldd	r18, Y+60	; 0x3c
     6ee:	3d ad       	ldd	r19, Y+61	; 0x3d
     6f0:	4e ad       	ldd	r20, Y+62	; 0x3e
     6f2:	5f ad       	ldd	r21, Y+63	; 0x3f
     6f4:	29 97       	sbiw	r28, 0x09	; 9
     6f6:	65 96       	adiw	r28, 0x15	; 21
     6f8:	6c ad       	ldd	r22, Y+60	; 0x3c
     6fa:	7d ad       	ldd	r23, Y+61	; 0x3d
     6fc:	8e ad       	ldd	r24, Y+62	; 0x3e
     6fe:	9f ad       	ldd	r25, Y+63	; 0x3f
     700:	65 97       	sbiw	r28, 0x15	; 21
     702:	6a d6       	rcall	.+3284   	; 0x13d8 <__subsf3>
     704:	2d a5       	ldd	r18, Y+45	; 0x2d
     706:	3e a5       	ldd	r19, Y+46	; 0x2e
     708:	4f a5       	ldd	r20, Y+47	; 0x2f
     70a:	58 a9       	ldd	r21, Y+48	; 0x30
     70c:	65 d6       	rcall	.+3274   	; 0x13d8 <__subsf3>
     70e:	9b 01       	movw	r18, r22
     710:	ac 01       	movw	r20, r24
     712:	6d a1       	ldd	r22, Y+37	; 0x25
     714:	7e a1       	ldd	r23, Y+38	; 0x26
     716:	8f a1       	ldd	r24, Y+39	; 0x27
     718:	98 a5       	ldd	r25, Y+40	; 0x28
     71a:	5f d6       	rcall	.+3262   	; 0x13da <__addsf3>
     71c:	6d a7       	std	Y+45, r22	; 0x2d
     71e:	7e a7       	std	Y+46, r23	; 0x2e
	wx = 2.0f * bx * (0.5f - q3q3 - q4q4) + 2.0f * bz * (q2q4 - q1q3);
     720:	8f a7       	std	Y+47, r24	; 0x2f
     722:	98 ab       	std	Y+48, r25	; 0x30
     724:	2d 8d       	ldd	r18, Y+29	; 0x1d
     726:	3e 8d       	ldd	r19, Y+30	; 0x1e
     728:	4f 8d       	ldd	r20, Y+31	; 0x1f
     72a:	58 a1       	ldd	r21, Y+32	; 0x20
     72c:	ca 01       	movw	r24, r20
     72e:	b9 01       	movw	r22, r18
     730:	54 d6       	rcall	.+3240   	; 0x13da <__addsf3>
     732:	4b 01       	movw	r8, r22
     734:	5c 01       	movw	r10, r24
     736:	9b 01       	movw	r18, r22
     738:	ac 01       	movw	r20, r24
     73a:	a5 96       	adiw	r28, 0x25	; 37
     73c:	6c ad       	ldd	r22, Y+60	; 0x3c
     73e:	7d ad       	ldd	r23, Y+61	; 0x3d
     740:	8e ad       	ldd	r24, Y+62	; 0x3e
     742:	9f ad       	ldd	r25, Y+63	; 0x3f
     744:	a5 97       	sbiw	r28, 0x25	; 37
     746:	fc d7       	rcall	.+4088   	; 0x1740 <__mulsf3>
     748:	6d a3       	std	Y+37, r22	; 0x25
     74a:	7e a3       	std	Y+38, r23	; 0x26
     74c:	8f a3       	std	Y+39, r24	; 0x27
     74e:	98 a7       	std	Y+40, r25	; 0x28
     750:	2d a9       	ldd	r18, Y+53	; 0x35
     752:	3e a9       	ldd	r19, Y+54	; 0x36
     754:	4f a9       	ldd	r20, Y+55	; 0x37
     756:	58 ad       	ldd	r21, Y+56	; 0x38
     758:	ca 01       	movw	r24, r20
     75a:	b9 01       	movw	r22, r18
     75c:	3e d6       	rcall	.+3196   	; 0x13da <__addsf3>
     75e:	6d 8f       	std	Y+29, r22	; 0x1d
     760:	7e 8f       	std	Y+30, r23	; 0x1e
     762:	8f 8f       	std	Y+31, r24	; 0x1f
     764:	98 a3       	std	Y+32, r25	; 0x20
     766:	9b 01       	movw	r18, r22
     768:	ac 01       	movw	r20, r24
     76a:	69 89       	ldd	r22, Y+17	; 0x11
     76c:	7a 89       	ldd	r23, Y+18	; 0x12
     76e:	8b 89       	ldd	r24, Y+19	; 0x13
     770:	9c 89       	ldd	r25, Y+20	; 0x14
     772:	e6 d7       	rcall	.+4044   	; 0x1740 <__mulsf3>
     774:	9b 01       	movw	r18, r22
     776:	ac 01       	movw	r20, r24
     778:	6d a1       	ldd	r22, Y+37	; 0x25
     77a:	7e a1       	ldd	r23, Y+38	; 0x26
     77c:	8f a1       	ldd	r24, Y+39	; 0x27
     77e:	98 a5       	ldd	r25, Y+40	; 0x28
     780:	2c d6       	rcall	.+3160   	; 0x13da <__addsf3>
     782:	69 8b       	std	Y+17, r22	; 0x11
     784:	7a 8b       	std	Y+18, r23	; 0x12
	wy = 2.0f * bx * (q2q3 - q1q4) + 2.0f * bz * (q1q2 + q3q4);
     786:	8b 8b       	std	Y+19, r24	; 0x13
     788:	9c 8b       	std	Y+20, r25	; 0x14
     78a:	a5 01       	movw	r20, r10
     78c:	94 01       	movw	r18, r8
     78e:	a9 96       	adiw	r28, 0x29	; 41
     790:	6c ad       	ldd	r22, Y+60	; 0x3c
     792:	7d ad       	ldd	r23, Y+61	; 0x3d
     794:	8e ad       	ldd	r24, Y+62	; 0x3e
     796:	9f ad       	ldd	r25, Y+63	; 0x3f
     798:	a9 97       	sbiw	r28, 0x29	; 41
     79a:	d2 d7       	rcall	.+4004   	; 0x1740 <__mulsf3>
     79c:	6d a3       	std	Y+37, r22	; 0x25
     79e:	7e a3       	std	Y+38, r23	; 0x26
     7a0:	8f a3       	std	Y+39, r24	; 0x27
     7a2:	98 a7       	std	Y+40, r25	; 0x28
     7a4:	2d 8d       	ldd	r18, Y+29	; 0x1d
     7a6:	3e 8d       	ldd	r19, Y+30	; 0x1e
     7a8:	4f 8d       	ldd	r20, Y+31	; 0x1f
     7aa:	58 a1       	ldd	r21, Y+32	; 0x20
     7ac:	69 a1       	ldd	r22, Y+33	; 0x21
     7ae:	7a a1       	ldd	r23, Y+34	; 0x22
     7b0:	8b a1       	ldd	r24, Y+35	; 0x23
     7b2:	9c a1       	ldd	r25, Y+36	; 0x24
     7b4:	c5 d7       	rcall	.+3978   	; 0x1740 <__mulsf3>
     7b6:	9b 01       	movw	r18, r22
     7b8:	ac 01       	movw	r20, r24
     7ba:	6d a1       	ldd	r22, Y+37	; 0x25
     7bc:	7e a1       	ldd	r23, Y+38	; 0x26
     7be:	8f a1       	ldd	r24, Y+39	; 0x27
     7c0:	98 a5       	ldd	r25, Y+40	; 0x28
     7c2:	0b d6       	rcall	.+3094   	; 0x13da <__addsf3>
     7c4:	69 a3       	std	Y+33, r22	; 0x21
     7c6:	7a a3       	std	Y+34, r23	; 0x22
	wz = 2.0f * bx * (q1q3 + q2q4) + 2.0f * bz * (0.5f - q2q2 - q3q3);
     7c8:	8b a3       	std	Y+35, r24	; 0x23
     7ca:	9c a3       	std	Y+36, r25	; 0x24
     7cc:	a5 01       	movw	r20, r10
     7ce:	94 01       	movw	r18, r8
     7d0:	ad 96       	adiw	r28, 0x2d	; 45
     7d2:	6c ad       	ldd	r22, Y+60	; 0x3c
     7d4:	7d ad       	ldd	r23, Y+61	; 0x3d
     7d6:	8e ad       	ldd	r24, Y+62	; 0x3e
     7d8:	9f ad       	ldd	r25, Y+63	; 0x3f
     7da:	ad 97       	sbiw	r28, 0x2d	; 45
     7dc:	b1 d7       	rcall	.+3938   	; 0x1740 <__mulsf3>
     7de:	4b 01       	movw	r8, r22
     7e0:	5c 01       	movw	r10, r24
     7e2:	2d 8d       	ldd	r18, Y+29	; 0x1d
     7e4:	3e 8d       	ldd	r19, Y+30	; 0x1e
     7e6:	4f 8d       	ldd	r20, Y+31	; 0x1f
     7e8:	58 a1       	ldd	r21, Y+32	; 0x20
     7ea:	69 a9       	ldd	r22, Y+49	; 0x31
     7ec:	7a a9       	ldd	r23, Y+50	; 0x32
     7ee:	8b a9       	ldd	r24, Y+51	; 0x33
     7f0:	9c a9       	ldd	r25, Y+52	; 0x34
     7f2:	a6 d7       	rcall	.+3916   	; 0x1740 <__mulsf3>
     7f4:	9b 01       	movw	r18, r22
     7f6:	ac 01       	movw	r20, r24
     7f8:	c5 01       	movw	r24, r10
     7fa:	b4 01       	movw	r22, r8
     7fc:	ee d5       	rcall	.+3036   	; 0x13da <__addsf3>
     7fe:	6d 8f       	std	Y+29, r22	; 0x1d
     800:	7e 8f       	std	Y+30, r23	; 0x1e

	// Error is cross product between estimated direction and measured direction of gravity
	ex = (ay * vz - az * vy) + (my * wz - mz * wy);
     802:	8f 8f       	std	Y+31, r24	; 0x1f
     804:	98 a3       	std	Y+32, r25	; 0x20
     806:	2d a5       	ldd	r18, Y+45	; 0x2d
     808:	3e a5       	ldd	r19, Y+46	; 0x2e
     80a:	4f a5       	ldd	r20, Y+47	; 0x2f
     80c:	58 a9       	ldd	r21, Y+48	; 0x30
     80e:	6d 96       	adiw	r28, 0x1d	; 29
     810:	6c ad       	ldd	r22, Y+60	; 0x3c
     812:	7d ad       	ldd	r23, Y+61	; 0x3d
     814:	8e ad       	ldd	r24, Y+62	; 0x3e
     816:	9f ad       	ldd	r25, Y+63	; 0x3f
     818:	6d 97       	sbiw	r28, 0x1d	; 29
     81a:	92 d7       	rcall	.+3876   	; 0x1740 <__mulsf3>
     81c:	4b 01       	movw	r8, r22
     81e:	5c 01       	movw	r10, r24
     820:	29 ad       	ldd	r18, Y+57	; 0x39
     822:	3a ad       	ldd	r19, Y+58	; 0x3a
     824:	4b ad       	ldd	r20, Y+59	; 0x3b
     826:	5c ad       	ldd	r21, Y+60	; 0x3c
     828:	a1 96       	adiw	r28, 0x21	; 33
     82a:	6c ad       	ldd	r22, Y+60	; 0x3c
     82c:	7d ad       	ldd	r23, Y+61	; 0x3d
     82e:	8e ad       	ldd	r24, Y+62	; 0x3e
     830:	9f ad       	ldd	r25, Y+63	; 0x3f
     832:	a1 97       	sbiw	r28, 0x21	; 33
     834:	85 d7       	rcall	.+3850   	; 0x1740 <__mulsf3>
     836:	9b 01       	movw	r18, r22
     838:	ac 01       	movw	r20, r24
     83a:	c5 01       	movw	r24, r10
     83c:	b4 01       	movw	r22, r8
     83e:	cc d5       	rcall	.+2968   	; 0x13d8 <__subsf3>
     840:	4b 01       	movw	r8, r22
     842:	5c 01       	movw	r10, r24
     844:	2d 8d       	ldd	r18, Y+29	; 0x1d
     846:	3e 8d       	ldd	r19, Y+30	; 0x1e
     848:	4f 8d       	ldd	r20, Y+31	; 0x1f
     84a:	58 a1       	ldd	r21, Y+32	; 0x20
     84c:	69 8d       	ldd	r22, Y+25	; 0x19
     84e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     850:	8b 8d       	ldd	r24, Y+27	; 0x1b
     852:	9c 8d       	ldd	r25, Y+28	; 0x1c
     854:	75 d7       	rcall	.+3818   	; 0x1740 <__mulsf3>
     856:	6d a3       	std	Y+37, r22	; 0x25
     858:	7e a3       	std	Y+38, r23	; 0x26
     85a:	8f a3       	std	Y+39, r24	; 0x27
     85c:	98 a7       	std	Y+40, r25	; 0x28
     85e:	29 a1       	ldd	r18, Y+33	; 0x21
     860:	3a a1       	ldd	r19, Y+34	; 0x22
     862:	4b a1       	ldd	r20, Y+35	; 0x23
     864:	5c a1       	ldd	r21, Y+36	; 0x24
     866:	69 81       	ldd	r22, Y+1	; 0x01
     868:	7a 81       	ldd	r23, Y+2	; 0x02
     86a:	8b 81       	ldd	r24, Y+3	; 0x03
     86c:	9c 81       	ldd	r25, Y+4	; 0x04
     86e:	68 d7       	rcall	.+3792   	; 0x1740 <__mulsf3>
     870:	9b 01       	movw	r18, r22
     872:	ac 01       	movw	r20, r24
     874:	6d a1       	ldd	r22, Y+37	; 0x25
     876:	7e a1       	ldd	r23, Y+38	; 0x26
     878:	8f a1       	ldd	r24, Y+39	; 0x27
     87a:	98 a5       	ldd	r25, Y+40	; 0x28
     87c:	ad d5       	rcall	.+2906   	; 0x13d8 <__subsf3>
     87e:	9b 01       	movw	r18, r22
     880:	ac 01       	movw	r20, r24
     882:	c5 01       	movw	r24, r10
     884:	b4 01       	movw	r22, r8
     886:	a9 d5       	rcall	.+2898   	; 0x13da <__addsf3>
     888:	6d a3       	std	Y+37, r22	; 0x25
     88a:	7e a3       	std	Y+38, r23	; 0x26
	ey = (az * vx - ax * vz) + (mz * wx - mx * wz);
     88c:	8f a3       	std	Y+39, r24	; 0x27
     88e:	98 a7       	std	Y+40, r25	; 0x28
     890:	29 a5       	ldd	r18, Y+41	; 0x29
     892:	3a a5       	ldd	r19, Y+42	; 0x2a
     894:	4b a5       	ldd	r20, Y+43	; 0x2b
     896:	5c a5       	ldd	r21, Y+44	; 0x2c
     898:	a1 96       	adiw	r28, 0x21	; 33
     89a:	6c ad       	ldd	r22, Y+60	; 0x3c
     89c:	7d ad       	ldd	r23, Y+61	; 0x3d
     89e:	8e ad       	ldd	r24, Y+62	; 0x3e
     8a0:	9f ad       	ldd	r25, Y+63	; 0x3f
     8a2:	a1 97       	sbiw	r28, 0x21	; 33
     8a4:	4d d7       	rcall	.+3738   	; 0x1740 <__mulsf3>
     8a6:	4b 01       	movw	r8, r22
     8a8:	5c 01       	movw	r10, r24
     8aa:	2d a5       	ldd	r18, Y+45	; 0x2d
     8ac:	3e a5       	ldd	r19, Y+46	; 0x2e
     8ae:	4f a5       	ldd	r20, Y+47	; 0x2f
     8b0:	58 a9       	ldd	r21, Y+48	; 0x30
     8b2:	69 96       	adiw	r28, 0x19	; 25
     8b4:	6c ad       	ldd	r22, Y+60	; 0x3c
     8b6:	7d ad       	ldd	r23, Y+61	; 0x3d
     8b8:	8e ad       	ldd	r24, Y+62	; 0x3e
     8ba:	9f ad       	ldd	r25, Y+63	; 0x3f
     8bc:	69 97       	sbiw	r28, 0x19	; 25
     8be:	40 d7       	rcall	.+3712   	; 0x1740 <__mulsf3>
     8c0:	9b 01       	movw	r18, r22
     8c2:	ac 01       	movw	r20, r24
     8c4:	c5 01       	movw	r24, r10
     8c6:	b4 01       	movw	r22, r8
     8c8:	87 d5       	rcall	.+2830   	; 0x13d8 <__subsf3>
     8ca:	4b 01       	movw	r8, r22
     8cc:	5c 01       	movw	r10, r24
     8ce:	29 89       	ldd	r18, Y+17	; 0x11
     8d0:	3a 89       	ldd	r19, Y+18	; 0x12
     8d2:	4b 89       	ldd	r20, Y+19	; 0x13
     8d4:	5c 89       	ldd	r21, Y+20	; 0x14
     8d6:	69 81       	ldd	r22, Y+1	; 0x01
     8d8:	7a 81       	ldd	r23, Y+2	; 0x02
     8da:	8b 81       	ldd	r24, Y+3	; 0x03
     8dc:	9c 81       	ldd	r25, Y+4	; 0x04
     8de:	30 d7       	rcall	.+3680   	; 0x1740 <__mulsf3>
     8e0:	69 83       	std	Y+1, r22	; 0x01
     8e2:	7a 83       	std	Y+2, r23	; 0x02
     8e4:	8b 83       	std	Y+3, r24	; 0x03
     8e6:	9c 83       	std	Y+4, r25	; 0x04
     8e8:	2d 8d       	ldd	r18, Y+29	; 0x1d
     8ea:	3e 8d       	ldd	r19, Y+30	; 0x1e
     8ec:	4f 8d       	ldd	r20, Y+31	; 0x1f
     8ee:	58 a1       	ldd	r21, Y+32	; 0x20
     8f0:	6d 89       	ldd	r22, Y+21	; 0x15
     8f2:	7e 89       	ldd	r23, Y+22	; 0x16
     8f4:	8f 89       	ldd	r24, Y+23	; 0x17
     8f6:	98 8d       	ldd	r25, Y+24	; 0x18
     8f8:	23 d7       	rcall	.+3654   	; 0x1740 <__mulsf3>
     8fa:	9b 01       	movw	r18, r22
     8fc:	ac 01       	movw	r20, r24
     8fe:	69 81       	ldd	r22, Y+1	; 0x01
     900:	7a 81       	ldd	r23, Y+2	; 0x02
     902:	8b 81       	ldd	r24, Y+3	; 0x03
     904:	9c 81       	ldd	r25, Y+4	; 0x04
     906:	68 d5       	rcall	.+2768   	; 0x13d8 <__subsf3>
     908:	9b 01       	movw	r18, r22
     90a:	ac 01       	movw	r20, r24
     90c:	c5 01       	movw	r24, r10
     90e:	b4 01       	movw	r22, r8
     910:	64 d5       	rcall	.+2760   	; 0x13da <__addsf3>
     912:	6d 8f       	std	Y+29, r22	; 0x1d
     914:	7e 8f       	std	Y+30, r23	; 0x1e
	ez = (ax * vy - ay * vx) + (mx * wy - my * wx);
     916:	8f 8f       	std	Y+31, r24	; 0x1f
     918:	98 a3       	std	Y+32, r25	; 0x20
     91a:	29 ad       	ldd	r18, Y+57	; 0x39
     91c:	3a ad       	ldd	r19, Y+58	; 0x3a
     91e:	4b ad       	ldd	r20, Y+59	; 0x3b
     920:	5c ad       	ldd	r21, Y+60	; 0x3c
     922:	69 96       	adiw	r28, 0x19	; 25
     924:	6c ad       	ldd	r22, Y+60	; 0x3c
     926:	7d ad       	ldd	r23, Y+61	; 0x3d
     928:	8e ad       	ldd	r24, Y+62	; 0x3e
     92a:	9f ad       	ldd	r25, Y+63	; 0x3f
     92c:	69 97       	sbiw	r28, 0x19	; 25
     92e:	08 d7       	rcall	.+3600   	; 0x1740 <__mulsf3>
     930:	4b 01       	movw	r8, r22
     932:	5c 01       	movw	r10, r24
     934:	29 a5       	ldd	r18, Y+41	; 0x29
     936:	3a a5       	ldd	r19, Y+42	; 0x2a
     938:	4b a5       	ldd	r20, Y+43	; 0x2b
     93a:	5c a5       	ldd	r21, Y+44	; 0x2c
     93c:	6d 96       	adiw	r28, 0x1d	; 29
     93e:	6c ad       	ldd	r22, Y+60	; 0x3c
     940:	7d ad       	ldd	r23, Y+61	; 0x3d
     942:	8e ad       	ldd	r24, Y+62	; 0x3e
     944:	9f ad       	ldd	r25, Y+63	; 0x3f
     946:	6d 97       	sbiw	r28, 0x1d	; 29
     948:	fb d6       	rcall	.+3574   	; 0x1740 <__mulsf3>
     94a:	9b 01       	movw	r18, r22
     94c:	ac 01       	movw	r20, r24
     94e:	c5 01       	movw	r24, r10
     950:	b4 01       	movw	r22, r8
     952:	42 d5       	rcall	.+2692   	; 0x13d8 <__subsf3>
     954:	69 83       	std	Y+1, r22	; 0x01
     956:	7a 83       	std	Y+2, r23	; 0x02
     958:	8b 83       	std	Y+3, r24	; 0x03
     95a:	9c 83       	std	Y+4, r25	; 0x04
     95c:	29 a1       	ldd	r18, Y+33	; 0x21
     95e:	3a a1       	ldd	r19, Y+34	; 0x22
     960:	4b a1       	ldd	r20, Y+35	; 0x23
     962:	5c a1       	ldd	r21, Y+36	; 0x24
     964:	6d 89       	ldd	r22, Y+21	; 0x15
     966:	7e 89       	ldd	r23, Y+22	; 0x16
     968:	8f 89       	ldd	r24, Y+23	; 0x17
     96a:	98 8d       	ldd	r25, Y+24	; 0x18
     96c:	e9 d6       	rcall	.+3538   	; 0x1740 <__mulsf3>
     96e:	4b 01       	movw	r8, r22
     970:	5c 01       	movw	r10, r24
     972:	29 89       	ldd	r18, Y+17	; 0x11
     974:	3a 89       	ldd	r19, Y+18	; 0x12
     976:	4b 89       	ldd	r20, Y+19	; 0x13
     978:	5c 89       	ldd	r21, Y+20	; 0x14
     97a:	69 8d       	ldd	r22, Y+25	; 0x19
     97c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     97e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     980:	9c 8d       	ldd	r25, Y+28	; 0x1c
     982:	de d6       	rcall	.+3516   	; 0x1740 <__mulsf3>
     984:	9b 01       	movw	r18, r22
     986:	ac 01       	movw	r20, r24
     988:	c5 01       	movw	r24, r10
     98a:	b4 01       	movw	r22, r8
     98c:	25 d5       	rcall	.+2634   	; 0x13d8 <__subsf3>
     98e:	9b 01       	movw	r18, r22
     990:	ac 01       	movw	r20, r24
     992:	69 81       	ldd	r22, Y+1	; 0x01
     994:	7a 81       	ldd	r23, Y+2	; 0x02
     996:	8b 81       	ldd	r24, Y+3	; 0x03
     998:	9c 81       	ldd	r25, Y+4	; 0x04
     99a:	1f d5       	rcall	.+2622   	; 0x13da <__addsf3>
	if (ex != 0.0f && ey != 0.0f && ez != 0.0f) {
     99c:	4b 01       	movw	r8, r22
     99e:	5c 01       	movw	r10, r24
     9a0:	20 e0       	ldi	r18, 0x00	; 0
     9a2:	30 e0       	ldi	r19, 0x00	; 0
     9a4:	a9 01       	movw	r20, r18
     9a6:	6d a1       	ldd	r22, Y+37	; 0x25
     9a8:	7e a1       	ldd	r23, Y+38	; 0x26
     9aa:	8f a1       	ldd	r24, Y+39	; 0x27
     9ac:	98 a5       	ldd	r25, Y+40	; 0x28
     9ae:	79 d5       	rcall	.+2802   	; 0x14a2 <__cmpsf2>
     9b0:	88 23       	and	r24, r24
     9b2:	09 f4       	brne	.+2      	; 0x9b6 <__LOCK_REGION_LENGTH__+0x5b6>
     9b4:	5e c0       	rjmp	.+188    	; 0xa72 <__LOCK_REGION_LENGTH__+0x672>
     9b6:	20 e0       	ldi	r18, 0x00	; 0
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	a9 01       	movw	r20, r18
     9bc:	6d 8d       	ldd	r22, Y+29	; 0x1d
     9be:	7e 8d       	ldd	r23, Y+30	; 0x1e
     9c0:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9c2:	98 a1       	ldd	r25, Y+32	; 0x20
     9c4:	6e d5       	rcall	.+2780   	; 0x14a2 <__cmpsf2>
     9c6:	88 23       	and	r24, r24
     9c8:	09 f4       	brne	.+2      	; 0x9cc <__LOCK_REGION_LENGTH__+0x5cc>
     9ca:	53 c0       	rjmp	.+166    	; 0xa72 <__LOCK_REGION_LENGTH__+0x672>
     9cc:	20 e0       	ldi	r18, 0x00	; 0
     9ce:	30 e0       	ldi	r19, 0x00	; 0
     9d0:	a9 01       	movw	r20, r18
     9d2:	c5 01       	movw	r24, r10
     9d4:	b4 01       	movw	r22, r8
     9d6:	65 d5       	rcall	.+2762   	; 0x14a2 <__cmpsf2>
     9d8:	88 23       	and	r24, r24
		// Apply feedback terms
		gx = gx + beta * ex;
     9da:	09 f4       	brne	.+2      	; 0x9de <__LOCK_REGION_LENGTH__+0x5de>
     9dc:	4a c0       	rjmp	.+148    	; 0xa72 <__LOCK_REGION_LENGTH__+0x672>
     9de:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     9e2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9e6:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     9ea:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     9ee:	6d a1       	ldd	r22, Y+37	; 0x25
     9f0:	7e a1       	ldd	r23, Y+38	; 0x26
     9f2:	8f a1       	ldd	r24, Y+39	; 0x27
     9f4:	98 a5       	ldd	r25, Y+40	; 0x28
     9f6:	a4 d6       	rcall	.+3400   	; 0x1740 <__mulsf3>
     9f8:	9b 01       	movw	r18, r22
     9fa:	ac 01       	movw	r20, r24
     9fc:	21 96       	adiw	r28, 0x01	; 1
     9fe:	6c ad       	ldd	r22, Y+60	; 0x3c
     a00:	7d ad       	ldd	r23, Y+61	; 0x3d
     a02:	8e ad       	ldd	r24, Y+62	; 0x3e
     a04:	9f ad       	ldd	r25, Y+63	; 0x3f
     a06:	21 97       	sbiw	r28, 0x01	; 1
     a08:	e8 d4       	rcall	.+2512   	; 0x13da <__addsf3>
     a0a:	21 96       	adiw	r28, 0x01	; 1
     a0c:	6c af       	std	Y+60, r22	; 0x3c
     a0e:	7d af       	std	Y+61, r23	; 0x3d
     a10:	8e af       	std	Y+62, r24	; 0x3e
		gy = gy + beta * ey;
     a12:	9f af       	std	Y+63, r25	; 0x3f
     a14:	21 97       	sbiw	r28, 0x01	; 1
     a16:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a1a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a1e:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     a22:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     a26:	6d 8d       	ldd	r22, Y+29	; 0x1d
     a28:	7e 8d       	ldd	r23, Y+30	; 0x1e
     a2a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a2c:	98 a1       	ldd	r25, Y+32	; 0x20
     a2e:	88 d6       	rcall	.+3344   	; 0x1740 <__mulsf3>
     a30:	9b 01       	movw	r18, r22
     a32:	ac 01       	movw	r20, r24
     a34:	25 96       	adiw	r28, 0x05	; 5
     a36:	6c ad       	ldd	r22, Y+60	; 0x3c
     a38:	7d ad       	ldd	r23, Y+61	; 0x3d
     a3a:	8e ad       	ldd	r24, Y+62	; 0x3e
     a3c:	9f ad       	ldd	r25, Y+63	; 0x3f
     a3e:	25 97       	sbiw	r28, 0x05	; 5
     a40:	cc d4       	rcall	.+2456   	; 0x13da <__addsf3>
     a42:	25 96       	adiw	r28, 0x05	; 5
     a44:	6c af       	std	Y+60, r22	; 0x3c
     a46:	7d af       	std	Y+61, r23	; 0x3d
		gz = gz + beta * ez;
     a48:	8e af       	std	Y+62, r24	; 0x3e
     a4a:	9f af       	std	Y+63, r25	; 0x3f
     a4c:	25 97       	sbiw	r28, 0x05	; 5
     a4e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a52:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a56:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     a5a:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     a5e:	c5 01       	movw	r24, r10
     a60:	b4 01       	movw	r22, r8
     a62:	6e d6       	rcall	.+3292   	; 0x1740 <__mulsf3>
     a64:	9b 01       	movw	r18, r22
     a66:	ac 01       	movw	r20, r24
     a68:	c7 01       	movw	r24, r14

	// Integrate rate of change of quaternion
	pa = q2;
	pb = q3;
	pc = q4;
	q1 = q1 + (-q2 * gx - q3 * gy - q4 * gz) * (0.5f * (1.0f / SAMPLE_FREQ));
     a6a:	b6 01       	movw	r22, r12
     a6c:	b6 d4       	rcall	.+2412   	; 0x13da <__addsf3>
     a6e:	6b 01       	movw	r12, r22
     a70:	7c 01       	movw	r14, r24
     a72:	a3 01       	movw	r20, r6
     a74:	92 01       	movw	r18, r4
     a76:	50 58       	subi	r21, 0x80	; 128
     a78:	21 96       	adiw	r28, 0x01	; 1
     a7a:	6c ad       	ldd	r22, Y+60	; 0x3c
     a7c:	7d ad       	ldd	r23, Y+61	; 0x3d
     a7e:	8e ad       	ldd	r24, Y+62	; 0x3e
     a80:	9f ad       	ldd	r25, Y+63	; 0x3f
     a82:	21 97       	sbiw	r28, 0x01	; 1
     a84:	5d d6       	rcall	.+3258   	; 0x1740 <__mulsf3>
     a86:	4b 01       	movw	r8, r22
     a88:	5c 01       	movw	r10, r24
     a8a:	2d 81       	ldd	r18, Y+5	; 0x05
     a8c:	3e 81       	ldd	r19, Y+6	; 0x06
     a8e:	4f 81       	ldd	r20, Y+7	; 0x07
     a90:	58 85       	ldd	r21, Y+8	; 0x08
     a92:	25 96       	adiw	r28, 0x05	; 5
     a94:	6c ad       	ldd	r22, Y+60	; 0x3c
     a96:	7d ad       	ldd	r23, Y+61	; 0x3d
     a98:	8e ad       	ldd	r24, Y+62	; 0x3e
     a9a:	9f ad       	ldd	r25, Y+63	; 0x3f
     a9c:	25 97       	sbiw	r28, 0x05	; 5
     a9e:	50 d6       	rcall	.+3232   	; 0x1740 <__mulsf3>
     aa0:	9b 01       	movw	r18, r22
     aa2:	ac 01       	movw	r20, r24
     aa4:	c5 01       	movw	r24, r10
     aa6:	b4 01       	movw	r22, r8
     aa8:	97 d4       	rcall	.+2350   	; 0x13d8 <__subsf3>
     aaa:	4b 01       	movw	r8, r22
     aac:	5c 01       	movw	r10, r24
     aae:	2d 85       	ldd	r18, Y+13	; 0x0d
     ab0:	3e 85       	ldd	r19, Y+14	; 0x0e
     ab2:	4f 85       	ldd	r20, Y+15	; 0x0f
     ab4:	58 89       	ldd	r21, Y+16	; 0x10
     ab6:	c7 01       	movw	r24, r14
     ab8:	b6 01       	movw	r22, r12
     aba:	42 d6       	rcall	.+3204   	; 0x1740 <__mulsf3>
     abc:	9b 01       	movw	r18, r22
     abe:	ac 01       	movw	r20, r24
     ac0:	c5 01       	movw	r24, r10
     ac2:	b4 01       	movw	r22, r8
     ac4:	89 d4       	rcall	.+2322   	; 0x13d8 <__subsf3>
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	40 e0       	ldi	r20, 0x00	; 0
     acc:	5c e3       	ldi	r21, 0x3C	; 60
     ace:	38 d6       	rcall	.+3184   	; 0x1740 <__mulsf3>
     ad0:	9b 01       	movw	r18, r22
     ad2:	ac 01       	movw	r20, r24
     ad4:	69 85       	ldd	r22, Y+9	; 0x09
     ad6:	7a 85       	ldd	r23, Y+10	; 0x0a
     ad8:	8b 85       	ldd	r24, Y+11	; 0x0b
     ada:	9c 85       	ldd	r25, Y+12	; 0x0c
     adc:	7e d4       	rcall	.+2300   	; 0x13da <__addsf3>
	q2 = pa + (q1 * gx + pb * gz - pc * gy) * (0.5f * (1.0f / SAMPLE_FREQ));
     ade:	69 87       	std	Y+9, r22	; 0x09
     ae0:	7a 87       	std	Y+10, r23	; 0x0a
     ae2:	8b 87       	std	Y+11, r24	; 0x0b
     ae4:	9c 87       	std	Y+12, r25	; 0x0c
     ae6:	9b 01       	movw	r18, r22
     ae8:	ac 01       	movw	r20, r24
     aea:	21 96       	adiw	r28, 0x01	; 1
     aec:	6c ad       	ldd	r22, Y+60	; 0x3c
     aee:	7d ad       	ldd	r23, Y+61	; 0x3d
     af0:	8e ad       	ldd	r24, Y+62	; 0x3e
     af2:	9f ad       	ldd	r25, Y+63	; 0x3f
     af4:	21 97       	sbiw	r28, 0x01	; 1
     af6:	24 d6       	rcall	.+3144   	; 0x1740 <__mulsf3>
     af8:	4b 01       	movw	r8, r22
     afa:	5c 01       	movw	r10, r24
     afc:	2d 81       	ldd	r18, Y+5	; 0x05
     afe:	3e 81       	ldd	r19, Y+6	; 0x06
     b00:	4f 81       	ldd	r20, Y+7	; 0x07
     b02:	58 85       	ldd	r21, Y+8	; 0x08
     b04:	c7 01       	movw	r24, r14
     b06:	b6 01       	movw	r22, r12
     b08:	1b d6       	rcall	.+3126   	; 0x1740 <__mulsf3>
     b0a:	9b 01       	movw	r18, r22
     b0c:	ac 01       	movw	r20, r24
     b0e:	c5 01       	movw	r24, r10
     b10:	b4 01       	movw	r22, r8
     b12:	63 d4       	rcall	.+2246   	; 0x13da <__addsf3>
     b14:	4b 01       	movw	r8, r22
     b16:	5c 01       	movw	r10, r24
     b18:	2d 85       	ldd	r18, Y+13	; 0x0d
     b1a:	3e 85       	ldd	r19, Y+14	; 0x0e
     b1c:	4f 85       	ldd	r20, Y+15	; 0x0f
     b1e:	58 89       	ldd	r21, Y+16	; 0x10
     b20:	25 96       	adiw	r28, 0x05	; 5
     b22:	6c ad       	ldd	r22, Y+60	; 0x3c
     b24:	7d ad       	ldd	r23, Y+61	; 0x3d
     b26:	8e ad       	ldd	r24, Y+62	; 0x3e
     b28:	9f ad       	ldd	r25, Y+63	; 0x3f
     b2a:	25 97       	sbiw	r28, 0x05	; 5
     b2c:	09 d6       	rcall	.+3090   	; 0x1740 <__mulsf3>
     b2e:	9b 01       	movw	r18, r22
     b30:	ac 01       	movw	r20, r24
     b32:	c5 01       	movw	r24, r10
     b34:	b4 01       	movw	r22, r8
     b36:	50 d4       	rcall	.+2208   	; 0x13d8 <__subsf3>
     b38:	20 e0       	ldi	r18, 0x00	; 0
     b3a:	30 e0       	ldi	r19, 0x00	; 0
     b3c:	40 e0       	ldi	r20, 0x00	; 0
     b3e:	5c e3       	ldi	r21, 0x3C	; 60
     b40:	ff d5       	rcall	.+3070   	; 0x1740 <__mulsf3>
     b42:	9b 01       	movw	r18, r22
     b44:	ac 01       	movw	r20, r24
     b46:	c3 01       	movw	r24, r6
     b48:	b2 01       	movw	r22, r4
     b4a:	47 d4       	rcall	.+2190   	; 0x13da <__addsf3>
	q3 = pb + (q1 * gy - pa * gz + pc * gx) * (0.5f * (1.0f / SAMPLE_FREQ));
     b4c:	6d 8b       	std	Y+21, r22	; 0x15
     b4e:	7e 8b       	std	Y+22, r23	; 0x16
     b50:	8f 8b       	std	Y+23, r24	; 0x17
     b52:	98 8f       	std	Y+24, r25	; 0x18
     b54:	29 85       	ldd	r18, Y+9	; 0x09
     b56:	3a 85       	ldd	r19, Y+10	; 0x0a
     b58:	4b 85       	ldd	r20, Y+11	; 0x0b
     b5a:	5c 85       	ldd	r21, Y+12	; 0x0c
     b5c:	25 96       	adiw	r28, 0x05	; 5
     b5e:	6c ad       	ldd	r22, Y+60	; 0x3c
     b60:	7d ad       	ldd	r23, Y+61	; 0x3d
     b62:	8e ad       	ldd	r24, Y+62	; 0x3e
     b64:	9f ad       	ldd	r25, Y+63	; 0x3f
     b66:	25 97       	sbiw	r28, 0x05	; 5
     b68:	eb d5       	rcall	.+3030   	; 0x1740 <__mulsf3>
     b6a:	4b 01       	movw	r8, r22
     b6c:	5c 01       	movw	r10, r24
     b6e:	a3 01       	movw	r20, r6
     b70:	92 01       	movw	r18, r4
     b72:	c7 01       	movw	r24, r14
     b74:	b6 01       	movw	r22, r12
     b76:	e4 d5       	rcall	.+3016   	; 0x1740 <__mulsf3>
     b78:	9b 01       	movw	r18, r22
     b7a:	ac 01       	movw	r20, r24
     b7c:	c5 01       	movw	r24, r10
     b7e:	b4 01       	movw	r22, r8
     b80:	2b d4       	rcall	.+2134   	; 0x13d8 <__subsf3>
     b82:	4b 01       	movw	r8, r22
     b84:	5c 01       	movw	r10, r24
     b86:	2d 85       	ldd	r18, Y+13	; 0x0d
     b88:	3e 85       	ldd	r19, Y+14	; 0x0e
     b8a:	4f 85       	ldd	r20, Y+15	; 0x0f
     b8c:	58 89       	ldd	r21, Y+16	; 0x10
     b8e:	21 96       	adiw	r28, 0x01	; 1
     b90:	6c ad       	ldd	r22, Y+60	; 0x3c
     b92:	7d ad       	ldd	r23, Y+61	; 0x3d
     b94:	8e ad       	ldd	r24, Y+62	; 0x3e
     b96:	9f ad       	ldd	r25, Y+63	; 0x3f
     b98:	21 97       	sbiw	r28, 0x01	; 1
     b9a:	d2 d5       	rcall	.+2980   	; 0x1740 <__mulsf3>
     b9c:	9b 01       	movw	r18, r22
     b9e:	ac 01       	movw	r20, r24
     ba0:	c5 01       	movw	r24, r10
     ba2:	b4 01       	movw	r22, r8
     ba4:	1a d4       	rcall	.+2100   	; 0x13da <__addsf3>
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	40 e0       	ldi	r20, 0x00	; 0
     bac:	5c e3       	ldi	r21, 0x3C	; 60
     bae:	c8 d5       	rcall	.+2960   	; 0x1740 <__mulsf3>
     bb0:	9b 01       	movw	r18, r22
     bb2:	ac 01       	movw	r20, r24
     bb4:	6d 81       	ldd	r22, Y+5	; 0x05
     bb6:	7e 81       	ldd	r23, Y+6	; 0x06
     bb8:	8f 81       	ldd	r24, Y+7	; 0x07
     bba:	98 85       	ldd	r25, Y+8	; 0x08
     bbc:	0e d4       	rcall	.+2076   	; 0x13da <__addsf3>
	q4 = pc + (q1 * gz + pa * gy - pb * gx) * (0.5f * (1.0f / SAMPLE_FREQ));
     bbe:	69 8f       	std	Y+25, r22	; 0x19
     bc0:	7a 8f       	std	Y+26, r23	; 0x1a
     bc2:	8b 8f       	std	Y+27, r24	; 0x1b
     bc4:	9c 8f       	std	Y+28, r25	; 0x1c
     bc6:	29 85       	ldd	r18, Y+9	; 0x09
     bc8:	3a 85       	ldd	r19, Y+10	; 0x0a
     bca:	4b 85       	ldd	r20, Y+11	; 0x0b
     bcc:	5c 85       	ldd	r21, Y+12	; 0x0c
     bce:	c7 01       	movw	r24, r14
     bd0:	b6 01       	movw	r22, r12
     bd2:	b6 d5       	rcall	.+2924   	; 0x1740 <__mulsf3>
     bd4:	6b 01       	movw	r12, r22
     bd6:	7c 01       	movw	r14, r24
     bd8:	a3 01       	movw	r20, r6
     bda:	92 01       	movw	r18, r4
     bdc:	25 96       	adiw	r28, 0x05	; 5
     bde:	6c ad       	ldd	r22, Y+60	; 0x3c
     be0:	7d ad       	ldd	r23, Y+61	; 0x3d
     be2:	8e ad       	ldd	r24, Y+62	; 0x3e
     be4:	9f ad       	ldd	r25, Y+63	; 0x3f
     be6:	25 97       	sbiw	r28, 0x05	; 5
     be8:	ab d5       	rcall	.+2902   	; 0x1740 <__mulsf3>
     bea:	9b 01       	movw	r18, r22
     bec:	ac 01       	movw	r20, r24
     bee:	c7 01       	movw	r24, r14
     bf0:	b6 01       	movw	r22, r12
     bf2:	f3 d3       	rcall	.+2022   	; 0x13da <__addsf3>
     bf4:	6b 01       	movw	r12, r22
     bf6:	7c 01       	movw	r14, r24
     bf8:	2d 81       	ldd	r18, Y+5	; 0x05
     bfa:	3e 81       	ldd	r19, Y+6	; 0x06
     bfc:	4f 81       	ldd	r20, Y+7	; 0x07
     bfe:	58 85       	ldd	r21, Y+8	; 0x08
     c00:	21 96       	adiw	r28, 0x01	; 1
     c02:	6c ad       	ldd	r22, Y+60	; 0x3c
     c04:	7d ad       	ldd	r23, Y+61	; 0x3d
     c06:	8e ad       	ldd	r24, Y+62	; 0x3e
     c08:	9f ad       	ldd	r25, Y+63	; 0x3f
     c0a:	21 97       	sbiw	r28, 0x01	; 1
     c0c:	99 d5       	rcall	.+2866   	; 0x1740 <__mulsf3>
     c0e:	9b 01       	movw	r18, r22
     c10:	ac 01       	movw	r20, r24
     c12:	c7 01       	movw	r24, r14
     c14:	b6 01       	movw	r22, r12
     c16:	e0 d3       	rcall	.+1984   	; 0x13d8 <__subsf3>
     c18:	20 e0       	ldi	r18, 0x00	; 0
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	40 e0       	ldi	r20, 0x00	; 0
     c1e:	5c e3       	ldi	r21, 0x3C	; 60
     c20:	8f d5       	rcall	.+2846   	; 0x1740 <__mulsf3>
     c22:	9b 01       	movw	r18, r22
     c24:	ac 01       	movw	r20, r24
     c26:	6d 85       	ldd	r22, Y+13	; 0x0d
     c28:	7e 85       	ldd	r23, Y+14	; 0x0e
     c2a:	8f 85       	ldd	r24, Y+15	; 0x0f

	// Normalize quaternion
	norm = sqrtf(q1*q1 + q2*q2 + q3*q3 + q4*q4);
     c2c:	98 89       	ldd	r25, Y+16	; 0x10
     c2e:	d5 d3       	rcall	.+1962   	; 0x13da <__addsf3>
     c30:	6d 83       	std	Y+5, r22	; 0x05
     c32:	7e 83       	std	Y+6, r23	; 0x06
     c34:	8f 83       	std	Y+7, r24	; 0x07
     c36:	98 87       	std	Y+8, r25	; 0x08
     c38:	29 85       	ldd	r18, Y+9	; 0x09
     c3a:	3a 85       	ldd	r19, Y+10	; 0x0a
     c3c:	4b 85       	ldd	r20, Y+11	; 0x0b
     c3e:	5c 85       	ldd	r21, Y+12	; 0x0c
     c40:	ca 01       	movw	r24, r20
     c42:	b9 01       	movw	r22, r18
     c44:	7d d5       	rcall	.+2810   	; 0x1740 <__mulsf3>
     c46:	4b 01       	movw	r8, r22
     c48:	5c 01       	movw	r10, r24
     c4a:	2d 89       	ldd	r18, Y+21	; 0x15
     c4c:	3e 89       	ldd	r19, Y+22	; 0x16
     c4e:	4f 89       	ldd	r20, Y+23	; 0x17
     c50:	58 8d       	ldd	r21, Y+24	; 0x18
     c52:	ca 01       	movw	r24, r20
     c54:	b9 01       	movw	r22, r18
     c56:	74 d5       	rcall	.+2792   	; 0x1740 <__mulsf3>
     c58:	9b 01       	movw	r18, r22
     c5a:	ac 01       	movw	r20, r24
     c5c:	c5 01       	movw	r24, r10
     c5e:	b4 01       	movw	r22, r8
     c60:	bc d3       	rcall	.+1912   	; 0x13da <__addsf3>
     c62:	4b 01       	movw	r8, r22
     c64:	5c 01       	movw	r10, r24
     c66:	29 8d       	ldd	r18, Y+25	; 0x19
     c68:	3a 8d       	ldd	r19, Y+26	; 0x1a
     c6a:	4b 8d       	ldd	r20, Y+27	; 0x1b
     c6c:	5c 8d       	ldd	r21, Y+28	; 0x1c
     c6e:	ca 01       	movw	r24, r20
     c70:	b9 01       	movw	r22, r18
     c72:	66 d5       	rcall	.+2764   	; 0x1740 <__mulsf3>
     c74:	9b 01       	movw	r18, r22
     c76:	ac 01       	movw	r20, r24
     c78:	c5 01       	movw	r24, r10
     c7a:	b4 01       	movw	r22, r8
     c7c:	ae d3       	rcall	.+1884   	; 0x13da <__addsf3>
     c7e:	4b 01       	movw	r8, r22
     c80:	5c 01       	movw	r10, r24
     c82:	2d 81       	ldd	r18, Y+5	; 0x05
     c84:	3e 81       	ldd	r19, Y+6	; 0x06
     c86:	4f 81       	ldd	r20, Y+7	; 0x07
     c88:	58 85       	ldd	r21, Y+8	; 0x08
     c8a:	ca 01       	movw	r24, r20
     c8c:	b9 01       	movw	r22, r18
     c8e:	58 d5       	rcall	.+2736   	; 0x1740 <__mulsf3>
     c90:	9b 01       	movw	r18, r22
     c92:	ac 01       	movw	r20, r24
     c94:	c5 01       	movw	r24, r10
     c96:	b4 01       	movw	r22, r8
     c98:	a0 d3       	rcall	.+1856   	; 0x13da <__addsf3>
     c9a:	b9 d5       	rcall	.+2930   	; 0x180e <sqrt>
	if (norm == 0.0f) return; // handle NaN
     c9c:	4b 01       	movw	r8, r22
     c9e:	5c 01       	movw	r10, r24
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	a9 01       	movw	r20, r18
     ca6:	fd d3       	rcall	.+2042   	; 0x14a2 <__cmpsf2>
     ca8:	88 23       	and	r24, r24
     caa:	09 f4       	brne	.+2      	; 0xcae <__LOCK_REGION_LENGTH__+0x8ae>
	norm = 1.0f / norm;
     cac:	44 c0       	rjmp	.+136    	; 0xd36 <__LOCK_REGION_LENGTH__+0x936>
     cae:	a5 01       	movw	r20, r10
     cb0:	94 01       	movw	r18, r8
     cb2:	60 e0       	ldi	r22, 0x00	; 0
     cb4:	70 e0       	ldi	r23, 0x00	; 0
     cb6:	80 e8       	ldi	r24, 0x80	; 128
     cb8:	9f e3       	ldi	r25, 0x3F	; 63
     cba:	f7 d3       	rcall	.+2030   	; 0x14aa <__divsf3>
     cbc:	6d 87       	std	Y+13, r22	; 0x0d
     cbe:	7e 87       	std	Y+14, r23	; 0x0e
     cc0:	8f 87       	std	Y+15, r24	; 0x0f
     cc2:	98 8b       	std	Y+16, r25	; 0x10
	q1 *= norm;
     cc4:	9b 01       	movw	r18, r22
     cc6:	ac 01       	movw	r20, r24
     cc8:	69 85       	ldd	r22, Y+9	; 0x09
     cca:	7a 85       	ldd	r23, Y+10	; 0x0a
     ccc:	8b 85       	ldd	r24, Y+11	; 0x0b
     cce:	9c 85       	ldd	r25, Y+12	; 0x0c
     cd0:	37 d5       	rcall	.+2670   	; 0x1740 <__mulsf3>
     cd2:	2b 01       	movw	r4, r22
     cd4:	3c 01       	movw	r6, r24
     cd6:	2d 85       	ldd	r18, Y+13	; 0x0d
	q2 *= norm;
     cd8:	3e 85       	ldd	r19, Y+14	; 0x0e
     cda:	4f 85       	ldd	r20, Y+15	; 0x0f
     cdc:	58 89       	ldd	r21, Y+16	; 0x10
     cde:	6d 89       	ldd	r22, Y+21	; 0x15
     ce0:	7e 89       	ldd	r23, Y+22	; 0x16
     ce2:	8f 89       	ldd	r24, Y+23	; 0x17
     ce4:	98 8d       	ldd	r25, Y+24	; 0x18
     ce6:	2c d5       	rcall	.+2648   	; 0x1740 <__mulsf3>
     ce8:	6b 01       	movw	r12, r22
     cea:	7c 01       	movw	r14, r24
     cec:	2d 85       	ldd	r18, Y+13	; 0x0d
     cee:	3e 85       	ldd	r19, Y+14	; 0x0e
	q3 *= norm;
     cf0:	4f 85       	ldd	r20, Y+15	; 0x0f
     cf2:	58 89       	ldd	r21, Y+16	; 0x10
     cf4:	69 8d       	ldd	r22, Y+25	; 0x19
     cf6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     cf8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cfa:	9c 8d       	ldd	r25, Y+28	; 0x1c
     cfc:	21 d5       	rcall	.+2626   	; 0x1740 <__mulsf3>
     cfe:	4b 01       	movw	r8, r22
     d00:	5c 01       	movw	r10, r24
     d02:	2d 85       	ldd	r18, Y+13	; 0x0d
     d04:	3e 85       	ldd	r19, Y+14	; 0x0e
     d06:	4f 85       	ldd	r20, Y+15	; 0x0f
	q4 *= norm;
     d08:	58 89       	ldd	r21, Y+16	; 0x10
     d0a:	6d 81       	ldd	r22, Y+5	; 0x05
     d0c:	7e 81       	ldd	r23, Y+6	; 0x06
     d0e:	8f 81       	ldd	r24, Y+7	; 0x07
     d10:	98 85       	ldd	r25, Y+8	; 0x08
     d12:	16 d5       	rcall	.+2604   	; 0x1740 <__mulsf3>
     d14:	f1 01       	movw	r30, r2
     d16:	40 82       	st	Z, r4
     d18:	51 82       	std	Z+1, r5	; 0x01
     d1a:	62 82       	std	Z+2, r6	; 0x02
	
	q[0] = q1;
     d1c:	73 82       	std	Z+3, r7	; 0x03
     d1e:	c4 82       	std	Z+4, r12	; 0x04
     d20:	d5 82       	std	Z+5, r13	; 0x05
     d22:	e6 82       	std	Z+6, r14	; 0x06
     d24:	f7 82       	std	Z+7, r15	; 0x07
	q[1] = q2;
     d26:	80 86       	std	Z+8, r8	; 0x08
     d28:	91 86       	std	Z+9, r9	; 0x09
     d2a:	a2 86       	std	Z+10, r10	; 0x0a
     d2c:	b3 86       	std	Z+11, r11	; 0x0b
	q[2] = q3;
     d2e:	64 87       	std	Z+12, r22	; 0x0c
     d30:	75 87       	std	Z+13, r23	; 0x0d
     d32:	86 87       	std	Z+14, r24	; 0x0e
     d34:	97 87       	std	Z+15, r25	; 0x0f
	q[3] = q4;
     d36:	c4 59       	subi	r28, 0x94	; 148
     d38:	df 4f       	sbci	r29, 0xFF	; 255
     d3a:	0f b6       	in	r0, 0x3f	; 63
     d3c:	f8 94       	cli
	
     d3e:	de bf       	out	0x3e, r29	; 62
     d40:	0f be       	out	0x3f, r0	; 63
     d42:	cd bf       	out	0x3d, r28	; 61
     d44:	df 91       	pop	r29
     d46:	cf 91       	pop	r28
     d48:	1f 91       	pop	r17
     d4a:	0f 91       	pop	r16
     d4c:	ff 90       	pop	r15
     d4e:	ef 90       	pop	r14
     d50:	df 90       	pop	r13
     d52:	cf 90       	pop	r12
     d54:	bf 90       	pop	r11
     d56:	af 90       	pop	r10
     d58:	9f 90       	pop	r9
     d5a:	8f 90       	pop	r8
     d5c:	7f 90       	pop	r7
     d5e:	6f 90       	pop	r6
     d60:	5f 90       	pop	r5
     d62:	4f 90       	pop	r4
     d64:	3f 90       	pop	r3
     d66:	2f 90       	pop	r2
     d68:	08 95       	ret

00000d6a <timer0_init>:
volatile uint8_t flag = 0;  // 플래그 비트

// 타이머 0 초기화 함수
void timer0_init() {
	// CTC 모드 설정 (WGM01 = 1, WGM00 = 0)
	TCCR0 = (1 << WGM01);
     d6a:	88 e0       	ldi	r24, 0x08	; 8
     d6c:	83 bf       	out	0x33, r24	; 51
	// 출력 비교 값 설정 (64Hz 주기 생성)
	OCR0 = 243;  // 16MHz 클럭, 1024 프리스케일러 사용 시 64Hz 주기
     d6e:	83 ef       	ldi	r24, 0xF3	; 243
     d70:	81 bf       	out	0x31, r24	; 49
	// 프리스케일러 1024 설정 (CS02 = 1, CS01 = 0, CS00 = 1)
	TCCR0 |= (1 << CS02) | (1 << CS00);
     d72:	83 b7       	in	r24, 0x33	; 51
     d74:	85 60       	ori	r24, 0x05	; 5
     d76:	83 bf       	out	0x33, r24	; 51
	// 출력 비교 인터럽트 허용
	TIMSK |= (1 << OCIE0);
     d78:	87 b7       	in	r24, 0x37	; 55
     d7a:	82 60       	ori	r24, 0x02	; 2
     d7c:	87 bf       	out	0x37, r24	; 55
     d7e:	08 95       	ret

00000d80 <__vector_15>:
}

ISR(TIMER0_COMP_vect) {
     d80:	1f 92       	push	r1
     d82:	0f 92       	push	r0
     d84:	0f b6       	in	r0, 0x3f	; 63
     d86:	0f 92       	push	r0
     d88:	11 24       	eor	r1, r1
     d8a:	8f 93       	push	r24
	flag = 1;  // 플래그 비트 설정
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
}
     d92:	8f 91       	pop	r24
     d94:	0f 90       	pop	r0
     d96:	0f be       	out	0x3f, r0	; 63
     d98:	0f 90       	pop	r0
     d9a:	1f 90       	pop	r1
     d9c:	18 95       	reti

00000d9e <main>:


int main(void) {
     d9e:	cf 93       	push	r28
     da0:	df 93       	push	r29
     da2:	cd b7       	in	r28, 0x3d	; 61
     da4:	de b7       	in	r29, 0x3e	; 62
     da6:	e6 97       	sbiw	r28, 0x36	; 54
     da8:	0f b6       	in	r0, 0x3f	; 63
     daa:	f8 94       	cli
     dac:	de bf       	out	0x3e, r29	; 62
     dae:	0f be       	out	0x3f, r0	; 63
     db0:	cd bf       	out	0x3d, r28	; 61
	int16_t accel[3], gyro[3], mag[3];
	//float magBias[3], magScale[3];
	float q[4] = {1.0f, 0.0f, 0.0f, 0.0f};
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	a0 e8       	ldi	r26, 0x80	; 128
     db8:	bf e3       	ldi	r27, 0x3F	; 63
     dba:	8b 8b       	std	Y+19, r24	; 0x13
     dbc:	9c 8b       	std	Y+20, r25	; 0x14
     dbe:	ad 8b       	std	Y+21, r26	; 0x15
     dc0:	be 8b       	std	Y+22, r27	; 0x16
     dc2:	1f 8a       	std	Y+23, r1	; 0x17
     dc4:	18 8e       	std	Y+24, r1	; 0x18
     dc6:	19 8e       	std	Y+25, r1	; 0x19
     dc8:	1a 8e       	std	Y+26, r1	; 0x1a
     dca:	1b 8e       	std	Y+27, r1	; 0x1b
     dcc:	1c 8e       	std	Y+28, r1	; 0x1c
     dce:	1d 8e       	std	Y+29, r1	; 0x1d
     dd0:	1e 8e       	std	Y+30, r1	; 0x1e
     dd2:	1f 8e       	std	Y+31, r1	; 0x1f
     dd4:	18 a2       	std	Y+32, r1	; 0x20
     dd6:	19 a2       	std	Y+33, r1	; 0x21
     dd8:	1a a2       	std	Y+34, r1	; 0x22
	int index = 0;
	UART1_init(57600);
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	71 ee       	ldi	r23, 0xE1	; 225
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	7d d2       	rcall	.+1274   	; 0x12de <UART1_init>
	//UART1_transmit('A');
	//UART1_receive();
	
	//UART1_transmit_string_LF("Start initiation!!!");
	I2C_Init();
     de4:	d0 d2       	rcall	.+1440   	; 0x1386 <I2C_Init>
	MPU9250_Init();
     de6:	72 d1       	rcall	.+740    	; 0x10cc <MPU9250_Init>
	AK8963_Init();
     de8:	11 d2       	rcall	.+1058   	; 0x120c <AK8963_Init>
     dea:	bf df       	rcall	.-130    	; 0xd6a <timer0_init>
	//UART1_transmit_string_LF("Complete initiation!!!");
	
	timer0_init();
     dec:	78 94       	sei
     dee:	61 2c       	mov	r6, r1
	
	sei();
     df0:	71 2c       	mov	r7, r1

int main(void) {
	int16_t accel[3], gyro[3], mag[3];
	//float magBias[3], magScale[3];
	float q[4] = {1.0f, 0.0f, 0.0f, 0.0f};
	int index = 0;
     df2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
	sei();
	
	//Calibrate_AK8963(magBias, magScale);

	while (1) {
		if (flag) {
     df6:	88 23       	and	r24, r24
     df8:	e1 f3       	breq	.-8      	; 0xdf2 <main+0x54>
     dfa:	be 01       	movw	r22, r28
     dfc:	69 5f       	subi	r22, 0xF9	; 249
			Read_Accel_Gyro(accel, gyro);
     dfe:	7f 4f       	sbci	r23, 0xFF	; 255
     e00:	ce 01       	movw	r24, r28
     e02:	01 96       	adiw	r24, 0x01	; 1
     e04:	79 d1       	rcall	.+754    	; 0x10f8 <Read_Accel_Gyro>
     e06:	ce 01       	movw	r24, r28
			Read_Magnetometer(mag);
     e08:	0d 96       	adiw	r24, 0x0d	; 13
     e0a:	1c d2       	rcall	.+1080   	; 0x1244 <Read_Magnetometer>
     e0c:	69 81       	ldd	r22, Y+1	; 0x01
			
			float ax = accel[0] * 9.81 * 2.0 / 32768.0; // ∵ ±2g 범위에서 16bit 해상도로 측정 -> [m/s^2]
     e0e:	7a 81       	ldd	r23, Y+2	; 0x02
     e10:	07 2e       	mov	r0, r23
     e12:	00 0c       	add	r0, r0
     e14:	88 0b       	sbc	r24, r24
     e16:	99 0b       	sbc	r25, r25
     e18:	e3 d3       	rcall	.+1990   	; 0x15e0 <__floatsisf>
     e1a:	23 ec       	ldi	r18, 0xC3	; 195
     e1c:	35 ef       	ldi	r19, 0xF5	; 245
     e1e:	4c e1       	ldi	r20, 0x1C	; 28
     e20:	51 e4       	ldi	r21, 0x41	; 65
     e22:	8e d4       	rcall	.+2332   	; 0x1740 <__mulsf3>
     e24:	9b 01       	movw	r18, r22
     e26:	ac 01       	movw	r20, r24
     e28:	d8 d2       	rcall	.+1456   	; 0x13da <__addsf3>
     e2a:	20 e0       	ldi	r18, 0x00	; 0
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	40 e0       	ldi	r20, 0x00	; 0
     e30:	58 e3       	ldi	r21, 0x38	; 56
     e32:	86 d4       	rcall	.+2316   	; 0x1740 <__mulsf3>
     e34:	4b 01       	movw	r8, r22
     e36:	5c 01       	movw	r10, r24
     e38:	6b 81       	ldd	r22, Y+3	; 0x03
			float ay = accel[1] * 9.81 * 2.0 / 32768.0;
     e3a:	7c 81       	ldd	r23, Y+4	; 0x04
     e3c:	07 2e       	mov	r0, r23
     e3e:	00 0c       	add	r0, r0
     e40:	88 0b       	sbc	r24, r24
     e42:	99 0b       	sbc	r25, r25
     e44:	cd d3       	rcall	.+1946   	; 0x15e0 <__floatsisf>
     e46:	23 ec       	ldi	r18, 0xC3	; 195
     e48:	35 ef       	ldi	r19, 0xF5	; 245
     e4a:	4c e1       	ldi	r20, 0x1C	; 28
     e4c:	51 e4       	ldi	r21, 0x41	; 65
     e4e:	78 d4       	rcall	.+2288   	; 0x1740 <__mulsf3>
     e50:	9b 01       	movw	r18, r22
     e52:	ac 01       	movw	r20, r24
     e54:	c2 d2       	rcall	.+1412   	; 0x13da <__addsf3>
     e56:	20 e0       	ldi	r18, 0x00	; 0
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	40 e0       	ldi	r20, 0x00	; 0
     e5c:	58 e3       	ldi	r21, 0x38	; 56
     e5e:	70 d4       	rcall	.+2272   	; 0x1740 <__mulsf3>
     e60:	56 2e       	mov	r5, r22
     e62:	47 2e       	mov	r4, r23
     e64:	38 2e       	mov	r3, r24
     e66:	29 2e       	mov	r2, r25
     e68:	6d 81       	ldd	r22, Y+5	; 0x05
			float az = accel[2] * 9.81 * 2.0 / 32768.0;
     e6a:	7e 81       	ldd	r23, Y+6	; 0x06
     e6c:	07 2e       	mov	r0, r23
     e6e:	00 0c       	add	r0, r0
     e70:	88 0b       	sbc	r24, r24
     e72:	99 0b       	sbc	r25, r25
     e74:	b5 d3       	rcall	.+1898   	; 0x15e0 <__floatsisf>
     e76:	23 ec       	ldi	r18, 0xC3	; 195
     e78:	35 ef       	ldi	r19, 0xF5	; 245
     e7a:	4c e1       	ldi	r20, 0x1C	; 28
     e7c:	51 e4       	ldi	r21, 0x41	; 65
     e7e:	60 d4       	rcall	.+2240   	; 0x1740 <__mulsf3>
     e80:	9b 01       	movw	r18, r22
     e82:	ac 01       	movw	r20, r24
     e84:	aa d2       	rcall	.+1364   	; 0x13da <__addsf3>
     e86:	20 e0       	ldi	r18, 0x00	; 0
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	40 e0       	ldi	r20, 0x00	; 0
     e8c:	58 e3       	ldi	r21, 0x38	; 56
     e8e:	58 d4       	rcall	.+2224   	; 0x1740 <__mulsf3>
     e90:	6b a7       	std	Y+43, r22	; 0x2b
     e92:	7c a7       	std	Y+44, r23	; 0x2c
     e94:	8d a7       	std	Y+45, r24	; 0x2d
     e96:	9e a7       	std	Y+46, r25	; 0x2e
     e98:	6f 81       	ldd	r22, Y+7	; 0x07
     e9a:	78 85       	ldd	r23, Y+8	; 0x08
			float gx = gyro[0] * (250.0 / 32768.0) * (M_PI / 180.0); // ∵ ±250deg/s 범위에서 16bit 해상도로 측정 -> [rad/s]
     e9c:	07 2e       	mov	r0, r23
     e9e:	00 0c       	add	r0, r0
     ea0:	88 0b       	sbc	r24, r24
     ea2:	99 0b       	sbc	r25, r25
     ea4:	9d d3       	rcall	.+1850   	; 0x15e0 <__floatsisf>
     ea6:	20 e0       	ldi	r18, 0x00	; 0
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	4a ef       	ldi	r20, 0xFA	; 250
     eac:	5b e3       	ldi	r21, 0x3B	; 59
     eae:	48 d4       	rcall	.+2192   	; 0x1740 <__mulsf3>
     eb0:	25 e3       	ldi	r18, 0x35	; 53
     eb2:	3a ef       	ldi	r19, 0xFA	; 250
     eb4:	4e e8       	ldi	r20, 0x8E	; 142
     eb6:	5c e3       	ldi	r21, 0x3C	; 60
     eb8:	43 d4       	rcall	.+2182   	; 0x1740 <__mulsf3>
     eba:	6b a3       	std	Y+35, r22	; 0x23
     ebc:	7c a3       	std	Y+36, r23	; 0x24
     ebe:	8d a3       	std	Y+37, r24	; 0x25
     ec0:	9e a3       	std	Y+38, r25	; 0x26
     ec2:	69 85       	ldd	r22, Y+9	; 0x09
     ec4:	7a 85       	ldd	r23, Y+10	; 0x0a
			float gy = gyro[1] * (250.0 / 32768.0) * (M_PI / 180.0);
     ec6:	07 2e       	mov	r0, r23
     ec8:	00 0c       	add	r0, r0
     eca:	88 0b       	sbc	r24, r24
     ecc:	99 0b       	sbc	r25, r25
     ece:	88 d3       	rcall	.+1808   	; 0x15e0 <__floatsisf>
     ed0:	20 e0       	ldi	r18, 0x00	; 0
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	4a ef       	ldi	r20, 0xFA	; 250
     ed6:	5b e3       	ldi	r21, 0x3B	; 59
     ed8:	33 d4       	rcall	.+2150   	; 0x1740 <__mulsf3>
     eda:	25 e3       	ldi	r18, 0x35	; 53
     edc:	3a ef       	ldi	r19, 0xFA	; 250
     ede:	4e e8       	ldi	r20, 0x8E	; 142
     ee0:	5c e3       	ldi	r21, 0x3C	; 60
     ee2:	2e d4       	rcall	.+2140   	; 0x1740 <__mulsf3>
     ee4:	6f a3       	std	Y+39, r22	; 0x27
     ee6:	78 a7       	std	Y+40, r23	; 0x28
     ee8:	89 a7       	std	Y+41, r24	; 0x29
     eea:	9a a7       	std	Y+42, r25	; 0x2a
     eec:	6b 85       	ldd	r22, Y+11	; 0x0b
     eee:	7c 85       	ldd	r23, Y+12	; 0x0c
			float gz = gyro[2] * (250.0 / 32768.0) * (M_PI / 180.0);
     ef0:	07 2e       	mov	r0, r23
     ef2:	00 0c       	add	r0, r0
     ef4:	88 0b       	sbc	r24, r24
     ef6:	99 0b       	sbc	r25, r25
     ef8:	73 d3       	rcall	.+1766   	; 0x15e0 <__floatsisf>
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	4a ef       	ldi	r20, 0xFA	; 250
     f00:	5b e3       	ldi	r21, 0x3B	; 59
     f02:	1e d4       	rcall	.+2108   	; 0x1740 <__mulsf3>
     f04:	25 e3       	ldi	r18, 0x35	; 53
     f06:	3a ef       	ldi	r19, 0xFA	; 250
     f08:	4e e8       	ldi	r20, 0x8E	; 142
     f0a:	5c e3       	ldi	r21, 0x3C	; 60
     f0c:	19 d4       	rcall	.+2098   	; 0x1740 <__mulsf3>
     f0e:	6b 01       	movw	r12, r22
     f10:	7c 01       	movw	r14, r24
     f12:	8d 85       	ldd	r24, Y+13	; 0x0d
     f14:	9e 85       	ldd	r25, Y+14	; 0x0e
     f16:	00 e3       	ldi	r16, 0x30	; 48
			float mx = mag[0] * 4912 / 32760.0; // ∵ ±4912uT 범위에서 16bit 해상도로 측정 -> [uT]
     f18:	13 e1       	ldi	r17, 0x13	; 19
     f1a:	80 9f       	mul	r24, r16
     f1c:	b0 01       	movw	r22, r0
     f1e:	81 9f       	mul	r24, r17
     f20:	70 0d       	add	r23, r0
     f22:	90 9f       	mul	r25, r16
     f24:	70 0d       	add	r23, r0
     f26:	11 24       	eor	r1, r1
     f28:	07 2e       	mov	r0, r23
     f2a:	00 0c       	add	r0, r0
     f2c:	88 0b       	sbc	r24, r24
     f2e:	99 0b       	sbc	r25, r25
     f30:	57 d3       	rcall	.+1710   	; 0x15e0 <__floatsisf>
     f32:	20 e0       	ldi	r18, 0x00	; 0
     f34:	30 ef       	ldi	r19, 0xF0	; 240
     f36:	4f ef       	ldi	r20, 0xFF	; 255
     f38:	56 e4       	ldi	r21, 0x46	; 70
     f3a:	b7 d2       	rcall	.+1390   	; 0x14aa <__divsf3>
     f3c:	6f a7       	std	Y+47, r22	; 0x2f
     f3e:	78 ab       	std	Y+48, r23	; 0x30
     f40:	89 ab       	std	Y+49, r24	; 0x31
     f42:	9a ab       	std	Y+50, r25	; 0x32
     f44:	8f 85       	ldd	r24, Y+15	; 0x0f
     f46:	98 89       	ldd	r25, Y+16	; 0x10
     f48:	80 9f       	mul	r24, r16
			float my = mag[1] * 4912 / 32760.0; // x, y 뒤바뀌고 z에는 - 붙은 이유 -> mpu9250 좌표계랑 ak8963 좌표계가 달라서 이를 mpu9250 기준으로 바꿔줌
     f4a:	b0 01       	movw	r22, r0
     f4c:	81 9f       	mul	r24, r17
     f4e:	70 0d       	add	r23, r0
     f50:	90 9f       	mul	r25, r16
     f52:	70 0d       	add	r23, r0
     f54:	11 24       	eor	r1, r1
     f56:	07 2e       	mov	r0, r23
     f58:	00 0c       	add	r0, r0
     f5a:	88 0b       	sbc	r24, r24
     f5c:	99 0b       	sbc	r25, r25
     f5e:	40 d3       	rcall	.+1664   	; 0x15e0 <__floatsisf>
     f60:	20 e0       	ldi	r18, 0x00	; 0
     f62:	30 ef       	ldi	r19, 0xF0	; 240
     f64:	4f ef       	ldi	r20, 0xFF	; 255
     f66:	56 e4       	ldi	r21, 0x46	; 70
     f68:	a0 d2       	rcall	.+1344   	; 0x14aa <__divsf3>
     f6a:	6b ab       	std	Y+51, r22	; 0x33
     f6c:	7c ab       	std	Y+52, r23	; 0x34
     f6e:	8d ab       	std	Y+53, r24	; 0x35
     f70:	9e ab       	std	Y+54, r25	; 0x36
     f72:	89 89       	ldd	r24, Y+17	; 0x11
     f74:	9a 89       	ldd	r25, Y+18	; 0x12
     f76:	80 9f       	mul	r24, r16
			float mz = -(mag[2] * 4912 / 32760.0);	
     f78:	b0 01       	movw	r22, r0
     f7a:	81 9f       	mul	r24, r17
     f7c:	70 0d       	add	r23, r0
     f7e:	90 9f       	mul	r25, r16
     f80:	70 0d       	add	r23, r0
     f82:	11 24       	eor	r1, r1
     f84:	07 2e       	mov	r0, r23
     f86:	00 0c       	add	r0, r0
     f88:	88 0b       	sbc	r24, r24
     f8a:	99 0b       	sbc	r25, r25
     f8c:	29 d3       	rcall	.+1618   	; 0x15e0 <__floatsisf>
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	30 ef       	ldi	r19, 0xF0	; 240
     f92:	4f ef       	ldi	r20, 0xFF	; 255
     f94:	56 e4       	ldi	r21, 0x46	; 70
     f96:	89 d2       	rcall	.+1298   	; 0x14aa <__divsf3>
     f98:	dc 01       	movw	r26, r24
     f9a:	cb 01       	movw	r24, r22
     f9c:	b0 58       	subi	r27, 0x80	; 128
     f9e:	bf 93       	push	r27
     fa0:	af 93       	push	r26
     fa2:	9f 93       	push	r25
     fa4:	8f 93       	push	r24
     fa6:	2e a9       	ldd	r18, Y+54	; 0x36
			
			MadgwickAHRSupdate(q, gx, gy, gz, ax, ay, az, mx, my, mz);
     fa8:	2f 93       	push	r18
     faa:	3d a9       	ldd	r19, Y+53	; 0x35
     fac:	3f 93       	push	r19
     fae:	8c a9       	ldd	r24, Y+52	; 0x34
     fb0:	8f 93       	push	r24
     fb2:	2b a9       	ldd	r18, Y+51	; 0x33
     fb4:	2f 93       	push	r18
     fb6:	3a a9       	ldd	r19, Y+50	; 0x32
     fb8:	3f 93       	push	r19
     fba:	89 a9       	ldd	r24, Y+49	; 0x31
     fbc:	8f 93       	push	r24
     fbe:	28 a9       	ldd	r18, Y+48	; 0x30
     fc0:	2f 93       	push	r18
     fc2:	3f a5       	ldd	r19, Y+47	; 0x2f
     fc4:	3f 93       	push	r19
     fc6:	8e a5       	ldd	r24, Y+46	; 0x2e
     fc8:	8f 93       	push	r24
     fca:	2d a5       	ldd	r18, Y+45	; 0x2d
     fcc:	2f 93       	push	r18
     fce:	3c a5       	ldd	r19, Y+44	; 0x2c
     fd0:	3f 93       	push	r19
     fd2:	8b a5       	ldd	r24, Y+43	; 0x2b
     fd4:	8f 93       	push	r24
     fd6:	2f 92       	push	r2
     fd8:	3f 92       	push	r3
     fda:	4f 92       	push	r4
     fdc:	5f 92       	push	r5
     fde:	0f a1       	ldd	r16, Y+39	; 0x27
     fe0:	18 a5       	ldd	r17, Y+40	; 0x28
     fe2:	29 a5       	ldd	r18, Y+41	; 0x29
     fe4:	3a a5       	ldd	r19, Y+42	; 0x2a
     fe6:	4b a1       	ldd	r20, Y+35	; 0x23
     fe8:	5c a1       	ldd	r21, Y+36	; 0x24
     fea:	6d a1       	ldd	r22, Y+37	; 0x25
     fec:	7e a1       	ldd	r23, Y+38	; 0x26
     fee:	ce 01       	movw	r24, r28
     ff0:	43 96       	adiw	r24, 0x13	; 19
     ff2:	6b d8       	rcall	.-3882   	; 0xca <MadgwickAHRSupdate>
     ff4:	c3 01       	movw	r24, r6
			
			if (index++ == 10){
     ff6:	01 96       	adiw	r24, 0x01	; 1
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	3a e0       	ldi	r19, 0x0A	; 10
    1004:	63 16       	cp	r6, r19
				UART1_transmit_int16((int16_t)10000*q[0]); UART1_transmit_string(",");
    1006:	71 04       	cpc	r7, r1
    1008:	09 f0       	breq	.+2      	; 0x100c <__DATA_REGION_LENGTH__+0xc>
    100a:	3d c0       	rjmp	.+122    	; 0x1086 <__DATA_REGION_LENGTH__+0x86>
    100c:	6b 89       	ldd	r22, Y+19	; 0x13
    100e:	7c 89       	ldd	r23, Y+20	; 0x14
    1010:	8d 89       	ldd	r24, Y+21	; 0x15
    1012:	9e 89       	ldd	r25, Y+22	; 0x16
    1014:	20 e0       	ldi	r18, 0x00	; 0
    1016:	30 e4       	ldi	r19, 0x40	; 64
    1018:	4c e1       	ldi	r20, 0x1C	; 28
    101a:	56 e4       	ldi	r21, 0x46	; 70
    101c:	91 d3       	rcall	.+1826   	; 0x1740 <__mulsf3>
    101e:	ad d2       	rcall	.+1370   	; 0x157a <__fixsfsi>
    1020:	cb 01       	movw	r24, r22
    1022:	96 d1       	rcall	.+812    	; 0x1350 <UART1_transmit_int16>
				UART1_transmit_int16((int16_t)10000*q[1]); UART1_transmit_string(",");
    1024:	84 e0       	ldi	r24, 0x04	; 4
    1026:	91 e0       	ldi	r25, 0x01	; 1
    1028:	87 d1       	rcall	.+782    	; 0x1338 <UART1_transmit_string>
    102a:	6f 89       	ldd	r22, Y+23	; 0x17
    102c:	78 8d       	ldd	r23, Y+24	; 0x18
    102e:	89 8d       	ldd	r24, Y+25	; 0x19
    1030:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1032:	20 e0       	ldi	r18, 0x00	; 0
    1034:	30 e4       	ldi	r19, 0x40	; 64
    1036:	4c e1       	ldi	r20, 0x1C	; 28
    1038:	56 e4       	ldi	r21, 0x46	; 70
    103a:	82 d3       	rcall	.+1796   	; 0x1740 <__mulsf3>
    103c:	9e d2       	rcall	.+1340   	; 0x157a <__fixsfsi>
    103e:	cb 01       	movw	r24, r22
    1040:	87 d1       	rcall	.+782    	; 0x1350 <UART1_transmit_int16>
				UART1_transmit_int16((int16_t)10000*q[2]); UART1_transmit_string(",");
    1042:	84 e0       	ldi	r24, 0x04	; 4
    1044:	91 e0       	ldi	r25, 0x01	; 1
    1046:	78 d1       	rcall	.+752    	; 0x1338 <UART1_transmit_string>
    1048:	6b 8d       	ldd	r22, Y+27	; 0x1b
    104a:	7c 8d       	ldd	r23, Y+28	; 0x1c
    104c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    104e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1050:	20 e0       	ldi	r18, 0x00	; 0
    1052:	30 e4       	ldi	r19, 0x40	; 64
    1054:	4c e1       	ldi	r20, 0x1C	; 28
    1056:	56 e4       	ldi	r21, 0x46	; 70
    1058:	73 d3       	rcall	.+1766   	; 0x1740 <__mulsf3>
    105a:	8f d2       	rcall	.+1310   	; 0x157a <__fixsfsi>
    105c:	cb 01       	movw	r24, r22
    105e:	78 d1       	rcall	.+752    	; 0x1350 <UART1_transmit_int16>
    1060:	84 e0       	ldi	r24, 0x04	; 4
    1062:	91 e0       	ldi	r25, 0x01	; 1
    1064:	69 d1       	rcall	.+722    	; 0x1338 <UART1_transmit_string>
    1066:	6f 8d       	ldd	r22, Y+31	; 0x1f
				UART1_transmit_int16((int16_t)10000*q[3]); UART1_transmit('\n');
    1068:	78 a1       	ldd	r23, Y+32	; 0x20
    106a:	89 a1       	ldd	r24, Y+33	; 0x21
    106c:	9a a1       	ldd	r25, Y+34	; 0x22
    106e:	20 e0       	ldi	r18, 0x00	; 0
    1070:	30 e4       	ldi	r19, 0x40	; 64
    1072:	4c e1       	ldi	r20, 0x1C	; 28
    1074:	56 e4       	ldi	r21, 0x46	; 70
    1076:	64 d3       	rcall	.+1736   	; 0x1740 <__mulsf3>
    1078:	80 d2       	rcall	.+1280   	; 0x157a <__fixsfsi>
    107a:	cb 01       	movw	r24, r22
    107c:	69 d1       	rcall	.+722    	; 0x1350 <UART1_transmit_int16>
    107e:	8a e0       	ldi	r24, 0x0A	; 10
    1080:	54 d1       	rcall	.+680    	; 0x132a <UART1_transmit>
    1082:	80 e0       	ldi	r24, 0x00	; 0
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
    108a:	3c 01       	movw	r6, r24
				index = 0;
    108c:	b2 ce       	rjmp	.-668    	; 0xdf2 <main+0x54>

0000108e <MPU9250_Write>:
    108e:	cf 93       	push	r28
			}
			
			flag = 0;  // 플래그 비트 클리어
    1090:	df 93       	push	r29
    1092:	d8 2f       	mov	r29, r24
    1094:	c6 2f       	mov	r28, r22
    1096:	80 d1       	rcall	.+768    	; 0x1398 <I2C_Start>

	// Calculate the average bias
	gyroBias[0] = gyroSum[0] / GYRO_CALIBRATION_SAMPLES;
	gyroBias[1] = gyroSum[1] / GYRO_CALIBRATION_SAMPLES;
	gyroBias[2] = gyroSum[2] / GYRO_CALIBRATION_SAMPLES;
}
    1098:	80 ed       	ldi	r24, 0xD0	; 208
    109a:	8a d1       	rcall	.+788    	; 0x13b0 <I2C_Write>
    109c:	8d 2f       	mov	r24, r29
    109e:	88 d1       	rcall	.+784    	; 0x13b0 <I2C_Write>
    10a0:	8c 2f       	mov	r24, r28
    10a2:	86 d1       	rcall	.+780    	; 0x13b0 <I2C_Write>
    10a4:	81 d1       	rcall	.+770    	; 0x13a8 <I2C_Stop>
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	08 95       	ret

000010ac <MPU9250_Read>:
    10ac:	cf 93       	push	r28
    10ae:	c8 2f       	mov	r28, r24
    10b0:	73 d1       	rcall	.+742    	; 0x1398 <I2C_Start>
    10b2:	80 ed       	ldi	r24, 0xD0	; 208
    10b4:	7d d1       	rcall	.+762    	; 0x13b0 <I2C_Write>
    10b6:	8c 2f       	mov	r24, r28
    10b8:	7b d1       	rcall	.+758    	; 0x13b0 <I2C_Write>
    10ba:	6e d1       	rcall	.+732    	; 0x1398 <I2C_Start>
    10bc:	81 ed       	ldi	r24, 0xD1	; 209
    10be:	78 d1       	rcall	.+752    	; 0x13b0 <I2C_Write>
    10c0:	81 d1       	rcall	.+770    	; 0x13c4 <I2C_ReadNack>
    10c2:	c8 2f       	mov	r28, r24
    10c4:	71 d1       	rcall	.+738    	; 0x13a8 <I2C_Stop>
    10c6:	8c 2f       	mov	r24, r28
    10c8:	cf 91       	pop	r28
    10ca:	08 95       	ret

000010cc <MPU9250_Init>:
    10cc:	60 e0       	ldi	r22, 0x00	; 0
    10ce:	8b e6       	ldi	r24, 0x6B	; 107
    10d0:	de df       	rcall	.-68     	; 0x108e <MPU9250_Write>
    10d2:	2f ef       	ldi	r18, 0xFF	; 255
    10d4:	81 ee       	ldi	r24, 0xE1	; 225
    10d6:	94 e0       	ldi	r25, 0x04	; 4
    10d8:	21 50       	subi	r18, 0x01	; 1
    10da:	80 40       	sbci	r24, 0x00	; 0
    10dc:	90 40       	sbci	r25, 0x00	; 0
    10de:	e1 f7       	brne	.-8      	; 0x10d8 <MPU9250_Init+0xc>
    10e0:	00 c0       	rjmp	.+0      	; 0x10e2 <MPU9250_Init+0x16>
    10e2:	00 00       	nop
    10e4:	60 e0       	ldi	r22, 0x00	; 0
    10e6:	8c e1       	ldi	r24, 0x1C	; 28
    10e8:	d2 df       	rcall	.-92     	; 0x108e <MPU9250_Write>
    10ea:	60 e0       	ldi	r22, 0x00	; 0
    10ec:	8b e1       	ldi	r24, 0x1B	; 27
    10ee:	cf df       	rcall	.-98     	; 0x108e <MPU9250_Write>
    10f0:	62 e0       	ldi	r22, 0x02	; 2
    10f2:	87 e3       	ldi	r24, 0x37	; 55
    10f4:	cc cf       	rjmp	.-104    	; 0x108e <MPU9250_Write>
    10f6:	08 95       	ret

000010f8 <Read_Accel_Gyro>:
    10f8:	cf 92       	push	r12
    10fa:	df 92       	push	r13
    10fc:	ef 92       	push	r14
    10fe:	ff 92       	push	r15
    1100:	0f 93       	push	r16
    1102:	1f 93       	push	r17
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	cd b7       	in	r28, 0x3d	; 61
    110a:	de b7       	in	r29, 0x3e	; 62
    110c:	2e 97       	sbiw	r28, 0x0e	; 14
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	f8 94       	cli
    1112:	de bf       	out	0x3e, r29	; 62
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	cd bf       	out	0x3d, r28	; 61
    1118:	6c 01       	movw	r12, r24
    111a:	7b 01       	movw	r14, r22
    111c:	00 e0       	ldi	r16, 0x00	; 0
    111e:	10 e0       	ldi	r17, 0x00	; 0
    1120:	0c c0       	rjmp	.+24     	; 0x113a <__stack+0x3b>
    1122:	8b e3       	ldi	r24, 0x3B	; 59
    1124:	80 0f       	add	r24, r16
    1126:	c2 df       	rcall	.-124    	; 0x10ac <MPU9250_Read>
    1128:	e1 e0       	ldi	r30, 0x01	; 1
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	ec 0f       	add	r30, r28
    112e:	fd 1f       	adc	r31, r29
    1130:	e0 0f       	add	r30, r16
    1132:	f1 1f       	adc	r31, r17
    1134:	80 83       	st	Z, r24
    1136:	0f 5f       	subi	r16, 0xFF	; 255
    1138:	1f 4f       	sbci	r17, 0xFF	; 255
    113a:	0e 30       	cpi	r16, 0x0E	; 14
    113c:	11 05       	cpc	r17, r1
    113e:	8c f3       	brlt	.-30     	; 0x1122 <__stack+0x23>
    1140:	89 81       	ldd	r24, Y+1	; 0x01
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	98 2f       	mov	r25, r24
    1146:	88 27       	eor	r24, r24
    1148:	2a 81       	ldd	r18, Y+2	; 0x02
    114a:	82 2b       	or	r24, r18
    114c:	f6 01       	movw	r30, r12
    114e:	91 83       	std	Z+1, r25	; 0x01
    1150:	80 83       	st	Z, r24
    1152:	8b 81       	ldd	r24, Y+3	; 0x03
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	98 2f       	mov	r25, r24
    1158:	88 27       	eor	r24, r24
    115a:	2c 81       	ldd	r18, Y+4	; 0x04
    115c:	82 2b       	or	r24, r18
    115e:	93 83       	std	Z+3, r25	; 0x03
    1160:	82 83       	std	Z+2, r24	; 0x02
    1162:	8d 81       	ldd	r24, Y+5	; 0x05
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	98 2f       	mov	r25, r24
    1168:	88 27       	eor	r24, r24
    116a:	2e 81       	ldd	r18, Y+6	; 0x06
    116c:	82 2b       	or	r24, r18
    116e:	95 83       	std	Z+5, r25	; 0x05
    1170:	84 83       	std	Z+4, r24	; 0x04
    1172:	89 85       	ldd	r24, Y+9	; 0x09
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	98 2f       	mov	r25, r24
    1178:	88 27       	eor	r24, r24
    117a:	2a 85       	ldd	r18, Y+10	; 0x0a
    117c:	ac 01       	movw	r20, r24
    117e:	42 2b       	or	r20, r18
    1180:	2b 85       	ldd	r18, Y+11	; 0x0b
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	32 2f       	mov	r19, r18
    1186:	22 27       	eor	r18, r18
    1188:	8c 85       	ldd	r24, Y+12	; 0x0c
    118a:	28 2b       	or	r18, r24
    118c:	8d 85       	ldd	r24, Y+13	; 0x0d
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	98 2f       	mov	r25, r24
    1192:	88 27       	eor	r24, r24
    1194:	6e 85       	ldd	r22, Y+14	; 0x0e
    1196:	86 2b       	or	r24, r22
    1198:	44 50       	subi	r20, 0x04	; 4
    119a:	51 09       	sbc	r21, r1
    119c:	f7 01       	movw	r30, r14
    119e:	51 83       	std	Z+1, r21	; 0x01
    11a0:	40 83       	st	Z, r20
    11a2:	20 54       	subi	r18, 0x40	; 64
    11a4:	31 09       	sbc	r19, r1
    11a6:	33 83       	std	Z+3, r19	; 0x03
    11a8:	22 83       	std	Z+2, r18	; 0x02
    11aa:	83 97       	sbiw	r24, 0x23	; 35
    11ac:	95 83       	std	Z+5, r25	; 0x05
    11ae:	84 83       	std	Z+4, r24	; 0x04
    11b0:	2e 96       	adiw	r28, 0x0e	; 14
    11b2:	0f b6       	in	r0, 0x3f	; 63
    11b4:	f8 94       	cli
    11b6:	de bf       	out	0x3e, r29	; 62
    11b8:	0f be       	out	0x3f, r0	; 63
    11ba:	cd bf       	out	0x3d, r28	; 61
    11bc:	df 91       	pop	r29
    11be:	cf 91       	pop	r28
    11c0:	1f 91       	pop	r17
    11c2:	0f 91       	pop	r16
    11c4:	ff 90       	pop	r15
    11c6:	ef 90       	pop	r14
    11c8:	df 90       	pop	r13
    11ca:	cf 90       	pop	r12
    11cc:	08 95       	ret

000011ce <AK8963_Write>:

// AK8963 Functions
void AK8963_Write(uint8_t reg, uint8_t data) {
    11ce:	cf 93       	push	r28
    11d0:	df 93       	push	r29
    11d2:	d8 2f       	mov	r29, r24
    11d4:	c6 2f       	mov	r28, r22
	I2C_Start();
    11d6:	e0 d0       	rcall	.+448    	; 0x1398 <I2C_Start>
	I2C_Write(AK8963_ADDRESS << 1);
    11d8:	88 e1       	ldi	r24, 0x18	; 24
    11da:	ea d0       	rcall	.+468    	; 0x13b0 <I2C_Write>
	I2C_Write(reg);
    11dc:	8d 2f       	mov	r24, r29
    11de:	e8 d0       	rcall	.+464    	; 0x13b0 <I2C_Write>
	I2C_Write(data);
    11e0:	8c 2f       	mov	r24, r28
    11e2:	e6 d0       	rcall	.+460    	; 0x13b0 <I2C_Write>
    11e4:	e1 d0       	rcall	.+450    	; 0x13a8 <I2C_Stop>
	I2C_Stop();
    11e6:	df 91       	pop	r29
    11e8:	cf 91       	pop	r28
}
    11ea:	08 95       	ret

000011ec <AK8963_Read>:
    11ec:	cf 93       	push	r28
    11ee:	c8 2f       	mov	r28, r24

uint8_t AK8963_Read(uint8_t reg) {
	uint8_t data;
	I2C_Start();
    11f0:	d3 d0       	rcall	.+422    	; 0x1398 <I2C_Start>
	I2C_Write((AK8963_ADDRESS << 1) | 0x00); // Write address
    11f2:	88 e1       	ldi	r24, 0x18	; 24
    11f4:	dd d0       	rcall	.+442    	; 0x13b0 <I2C_Write>
	I2C_Write(reg);
    11f6:	8c 2f       	mov	r24, r28
    11f8:	db d0       	rcall	.+438    	; 0x13b0 <I2C_Write>
	I2C_Start();
    11fa:	ce d0       	rcall	.+412    	; 0x1398 <I2C_Start>
	I2C_Write((AK8963_ADDRESS << 1) | 0x01); // Read address
    11fc:	89 e1       	ldi	r24, 0x19	; 25
    11fe:	d8 d0       	rcall	.+432    	; 0x13b0 <I2C_Write>
	data = I2C_ReadNack();
    1200:	e1 d0       	rcall	.+450    	; 0x13c4 <I2C_ReadNack>
    1202:	c8 2f       	mov	r28, r24
    1204:	d1 d0       	rcall	.+418    	; 0x13a8 <I2C_Stop>
	I2C_Stop();
    1206:	8c 2f       	mov	r24, r28
    1208:	cf 91       	pop	r28
	return data;
}
    120a:	08 95       	ret

0000120c <AK8963_Init>:
    120c:	60 e0       	ldi	r22, 0x00	; 0
    120e:	8a e0       	ldi	r24, 0x0A	; 10

void AK8963_Init() {
	// Power down AK8963
	AK8963_Write(0x0A, 0x00);
    1210:	de df       	rcall	.-68     	; 0x11ce <AK8963_Write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1212:	8f e3       	ldi	r24, 0x3F	; 63
    1214:	9c e9       	ldi	r25, 0x9C	; 156
    1216:	01 97       	sbiw	r24, 0x01	; 1
    1218:	f1 f7       	brne	.-4      	; 0x1216 <AK8963_Init+0xa>
    121a:	00 c0       	rjmp	.+0      	; 0x121c <AK8963_Init+0x10>
    121c:	00 00       	nop
	_delay_ms(10);
	// Enter Fuse ROM access mode
	AK8963_Write(0x0A, 0x0F);
    121e:	6f e0       	ldi	r22, 0x0F	; 15
    1220:	8a e0       	ldi	r24, 0x0A	; 10
    1222:	d5 df       	rcall	.-86     	; 0x11ce <AK8963_Write>
    1224:	8f e3       	ldi	r24, 0x3F	; 63
    1226:	9c e9       	ldi	r25, 0x9C	; 156
    1228:	01 97       	sbiw	r24, 0x01	; 1
    122a:	f1 f7       	brne	.-4      	; 0x1228 <AK8963_Init+0x1c>
    122c:	00 c0       	rjmp	.+0      	; 0x122e <AK8963_Init+0x22>
    122e:	00 00       	nop
	_delay_ms(10);
	// Power down AK8963
	AK8963_Write(0x0A, 0x00);
    1230:	60 e0       	ldi	r22, 0x00	; 0
    1232:	8a e0       	ldi	r24, 0x0A	; 10
    1234:	cc df       	rcall	.-104    	; 0x11ce <AK8963_Write>
    1236:	8f e3       	ldi	r24, 0x3F	; 63
    1238:	9c e9       	ldi	r25, 0x9C	; 156
    123a:	01 97       	sbiw	r24, 0x01	; 1
    123c:	f1 f7       	brne	.-4      	; 0x123a <AK8963_Init+0x2e>
    123e:	00 c0       	rjmp	.+0      	; 0x1240 <AK8963_Init+0x34>
    1240:	00 00       	nop
    1242:	08 95       	ret

00001244 <Read_Magnetometer>:
	_delay_ms(10);
}

void Read_Magnetometer(int16_t* mag) {
    1244:	ef 92       	push	r14
    1246:	ff 92       	push	r15
    1248:	0f 93       	push	r16
    124a:	1f 93       	push	r17
    124c:	cf 93       	push	r28
    124e:	df 93       	push	r29
    1250:	00 d0       	rcall	.+0      	; 0x1252 <Read_Magnetometer+0xe>
    1252:	00 d0       	rcall	.+0      	; 0x1254 <Read_Magnetometer+0x10>
    1254:	00 d0       	rcall	.+0      	; 0x1256 <Read_Magnetometer+0x12>
    1256:	cd b7       	in	r28, 0x3d	; 61
    1258:	de b7       	in	r29, 0x3e	; 62
    125a:	7c 01       	movw	r14, r24
	uint8_t rawData[6];

	// Set to single measurement mode, 16bit
	AK8963_Write(0x0A, 0x11);
    125c:	61 e1       	ldi	r22, 0x11	; 17
    125e:	8a e0       	ldi	r24, 0x0A	; 10
    1260:	b6 df       	rcall	.-148    	; 0x11ce <AK8963_Write>
    1262:	8f e3       	ldi	r24, 0x3F	; 63
    1264:	9c e9       	ldi	r25, 0x9C	; 156
    1266:	01 97       	sbiw	r24, 0x01	; 1
    1268:	f1 f7       	brne	.-4      	; 0x1266 <Read_Magnetometer+0x22>
    126a:	00 c0       	rjmp	.+0      	; 0x126c <Read_Magnetometer+0x28>
    126c:	00 00       	nop
	_delay_ms(10);

	for (int i = 0; i < 6; i++) {
    126e:	00 e0       	ldi	r16, 0x00	; 0
    1270:	10 e0       	ldi	r17, 0x00	; 0
    1272:	0c c0       	rjmp	.+24     	; 0x128c <Read_Magnetometer+0x48>
		rawData[i] = AK8963_Read(0x03 + i);
    1274:	83 e0       	ldi	r24, 0x03	; 3
    1276:	80 0f       	add	r24, r16
    1278:	b9 df       	rcall	.-142    	; 0x11ec <AK8963_Read>
    127a:	e1 e0       	ldi	r30, 0x01	; 1
    127c:	f0 e0       	ldi	r31, 0x00	; 0
    127e:	ec 0f       	add	r30, r28
    1280:	fd 1f       	adc	r31, r29
    1282:	e0 0f       	add	r30, r16
    1284:	f1 1f       	adc	r31, r17
    1286:	80 83       	st	Z, r24

	// Set to single measurement mode, 16bit
	AK8963_Write(0x0A, 0x11);
	_delay_ms(10);

	for (int i = 0; i < 6; i++) {
    1288:	0f 5f       	subi	r16, 0xFF	; 255
    128a:	1f 4f       	sbci	r17, 0xFF	; 255
    128c:	06 30       	cpi	r16, 0x06	; 6
    128e:	11 05       	cpc	r17, r1
    1290:	8c f3       	brlt	.-30     	; 0x1274 <Read_Magnetometer+0x30>
		rawData[i] = AK8963_Read(0x03 + i);
	}
	// Magnetometer data
	mag[0] = ((int16_t)rawData[1] << 8) | rawData[0];
    1292:	8a 81       	ldd	r24, Y+2	; 0x02
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	98 2f       	mov	r25, r24
    1298:	88 27       	eor	r24, r24
    129a:	29 81       	ldd	r18, Y+1	; 0x01
    129c:	82 2b       	or	r24, r18
    129e:	f7 01       	movw	r30, r14
    12a0:	91 83       	std	Z+1, r25	; 0x01
    12a2:	80 83       	st	Z, r24
	mag[1] = ((int16_t)rawData[3] << 8) | rawData[2];
    12a4:	8c 81       	ldd	r24, Y+4	; 0x04
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	98 2f       	mov	r25, r24
    12aa:	88 27       	eor	r24, r24
    12ac:	2b 81       	ldd	r18, Y+3	; 0x03
    12ae:	82 2b       	or	r24, r18
    12b0:	93 83       	std	Z+3, r25	; 0x03
    12b2:	82 83       	std	Z+2, r24	; 0x02
	mag[2] = ((int16_t)rawData[5] << 8) | rawData[4];
    12b4:	8e 81       	ldd	r24, Y+6	; 0x06
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	98 2f       	mov	r25, r24
    12ba:	88 27       	eor	r24, r24
    12bc:	2d 81       	ldd	r18, Y+5	; 0x05
    12be:	82 2b       	or	r24, r18
    12c0:	95 83       	std	Z+5, r25	; 0x05
    12c2:	84 83       	std	Z+4, r24	; 0x04
}
    12c4:	26 96       	adiw	r28, 0x06	; 6
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	f8 94       	cli
    12ca:	de bf       	out	0x3e, r29	; 62
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	cd bf       	out	0x3d, r28	; 61
    12d0:	df 91       	pop	r29
    12d2:	cf 91       	pop	r28
    12d4:	1f 91       	pop	r17
    12d6:	0f 91       	pop	r16
    12d8:	ff 90       	pop	r15
    12da:	ef 90       	pop	r14
    12dc:	08 95       	ret

000012de <UART1_init>:

uint8_t I2C_ReadAck() {
	TWCR = (1 << TWEN) | (1 << TWINT) | (1 << TWEA); // Start receiving data with ACK
	while (!(TWCR & (1 << TWINT))); // Wait for TWINT flag set
	return TWDR;
}
    12de:	dc 01       	movw	r26, r24
    12e0:	cb 01       	movw	r24, r22
    12e2:	88 0f       	add	r24, r24
    12e4:	99 1f       	adc	r25, r25
    12e6:	aa 1f       	adc	r26, r26
    12e8:	bb 1f       	adc	r27, r27
    12ea:	88 0f       	add	r24, r24
    12ec:	99 1f       	adc	r25, r25
    12ee:	aa 1f       	adc	r26, r26
    12f0:	bb 1f       	adc	r27, r27
    12f2:	9c 01       	movw	r18, r24
    12f4:	ad 01       	movw	r20, r26
    12f6:	22 0f       	add	r18, r18
    12f8:	33 1f       	adc	r19, r19
    12fa:	44 1f       	adc	r20, r20
    12fc:	55 1f       	adc	r21, r21
    12fe:	22 0f       	add	r18, r18
    1300:	33 1f       	adc	r19, r19
    1302:	44 1f       	adc	r20, r20
    1304:	55 1f       	adc	r21, r21
    1306:	60 e0       	ldi	r22, 0x00	; 0
    1308:	74 e2       	ldi	r23, 0x24	; 36
    130a:	84 ef       	ldi	r24, 0xF4	; 244
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	d2 d2       	rcall	.+1444   	; 0x18b4 <__udivmodsi4>
    1310:	21 50       	subi	r18, 0x01	; 1
    1312:	31 09       	sbc	r19, r1
    1314:	30 93 98 00 	sts	0x0098, r19	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
    1318:	20 93 99 00 	sts	0x0099, r18	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
    131c:	88 e9       	ldi	r24, 0x98	; 152
    131e:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1322:	86 e0       	ldi	r24, 0x06	; 6
    1324:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
    1328:	08 95       	ret

0000132a <UART1_transmit>:
    132a:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    132e:	95 ff       	sbrs	r25, 5
    1330:	fc cf       	rjmp	.-8      	; 0x132a <UART1_transmit>
    1332:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1336:	08 95       	ret

00001338 <UART1_transmit_string>:
    1338:	cf 93       	push	r28
    133a:	df 93       	push	r29
    133c:	ec 01       	movw	r28, r24
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <UART1_transmit_string+0xc>
    1340:	21 96       	adiw	r28, 0x01	; 1
    1342:	f3 df       	rcall	.-26     	; 0x132a <UART1_transmit>
    1344:	88 81       	ld	r24, Y
    1346:	81 11       	cpse	r24, r1
    1348:	fb cf       	rjmp	.-10     	; 0x1340 <UART1_transmit_string+0x8>
    134a:	df 91       	pop	r29
    134c:	cf 91       	pop	r28
    134e:	08 95       	ret

00001350 <UART1_transmit_int16>:
    1350:	cf 93       	push	r28
    1352:	df 93       	push	r29
    1354:	cd b7       	in	r28, 0x3d	; 61
    1356:	de b7       	in	r29, 0x3e	; 62
    1358:	27 97       	sbiw	r28, 0x07	; 7
    135a:	0f b6       	in	r0, 0x3f	; 63
    135c:	f8 94       	cli
    135e:	de bf       	out	0x3e, r29	; 62
    1360:	0f be       	out	0x3f, r0	; 63
    1362:	cd bf       	out	0x3d, r28	; 61
    1364:	4a e0       	ldi	r20, 0x0A	; 10
    1366:	be 01       	movw	r22, r28
    1368:	6f 5f       	subi	r22, 0xFF	; 255
    136a:	7f 4f       	sbci	r23, 0xFF	; 255
    136c:	c5 d2       	rcall	.+1418   	; 0x18f8 <__itoa_ncheck>
    136e:	ce 01       	movw	r24, r28
    1370:	01 96       	adiw	r24, 0x01	; 1
    1372:	e2 df       	rcall	.-60     	; 0x1338 <UART1_transmit_string>
    1374:	27 96       	adiw	r28, 0x07	; 7
    1376:	0f b6       	in	r0, 0x3f	; 63
    1378:	f8 94       	cli
    137a:	de bf       	out	0x3e, r29	; 62
    137c:	0f be       	out	0x3f, r0	; 63
    137e:	cd bf       	out	0x3d, r28	; 61
    1380:	df 91       	pop	r29
    1382:	cf 91       	pop	r28
    1384:	08 95       	ret

00001386 <I2C_Init>:
    1386:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    138a:	86 e4       	ldi	r24, 0x46	; 70
    138c:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    1390:	84 e0       	ldi	r24, 0x04	; 4
    1392:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1396:	08 95       	ret

00001398 <I2C_Start>:
    1398:	84 ea       	ldi	r24, 0xA4	; 164
    139a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    139e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    13a2:	88 23       	and	r24, r24
    13a4:	e4 f7       	brge	.-8      	; 0x139e <I2C_Start+0x6>
    13a6:	08 95       	ret

000013a8 <I2C_Stop>:
    13a8:	84 e9       	ldi	r24, 0x94	; 148
    13aa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    13ae:	08 95       	ret

000013b0 <I2C_Write>:
    13b0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    13b4:	84 e8       	ldi	r24, 0x84	; 132
    13b6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    13ba:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    13be:	88 23       	and	r24, r24
    13c0:	e4 f7       	brge	.-8      	; 0x13ba <I2C_Write+0xa>
    13c2:	08 95       	ret

000013c4 <I2C_ReadNack>:

uint8_t I2C_ReadNack() {
	TWCR = (1 << TWEN) | (1 << TWINT); // Start receiving data without ACK
    13c4:	84 e8       	ldi	r24, 0x84	; 132
    13c6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1 << TWINT))); // Wait for TWINT flag set
    13ca:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    13ce:	88 23       	and	r24, r24
    13d0:	e4 f7       	brge	.-8      	; 0x13ca <I2C_ReadNack+0x6>
	return TWDR;
    13d2:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
}
    13d6:	08 95       	ret

000013d8 <__subsf3>:
    13d8:	50 58       	subi	r21, 0x80	; 128

000013da <__addsf3>:
    13da:	bb 27       	eor	r27, r27
    13dc:	aa 27       	eor	r26, r26
    13de:	0e d0       	rcall	.+28     	; 0x13fc <__addsf3x>
    13e0:	75 c1       	rjmp	.+746    	; 0x16cc <__fp_round>
    13e2:	66 d1       	rcall	.+716    	; 0x16b0 <__fp_pscA>
    13e4:	30 f0       	brcs	.+12     	; 0x13f2 <__addsf3+0x18>
    13e6:	6b d1       	rcall	.+726    	; 0x16be <__fp_pscB>
    13e8:	20 f0       	brcs	.+8      	; 0x13f2 <__addsf3+0x18>
    13ea:	31 f4       	brne	.+12     	; 0x13f8 <__addsf3+0x1e>
    13ec:	9f 3f       	cpi	r25, 0xFF	; 255
    13ee:	11 f4       	brne	.+4      	; 0x13f4 <__addsf3+0x1a>
    13f0:	1e f4       	brtc	.+6      	; 0x13f8 <__addsf3+0x1e>
    13f2:	5b c1       	rjmp	.+694    	; 0x16aa <__fp_nan>
    13f4:	0e f4       	brtc	.+2      	; 0x13f8 <__addsf3+0x1e>
    13f6:	e0 95       	com	r30
    13f8:	e7 fb       	bst	r30, 7
    13fa:	51 c1       	rjmp	.+674    	; 0x169e <__fp_inf>

000013fc <__addsf3x>:
    13fc:	e9 2f       	mov	r30, r25
    13fe:	77 d1       	rcall	.+750    	; 0x16ee <__fp_split3>
    1400:	80 f3       	brcs	.-32     	; 0x13e2 <__addsf3+0x8>
    1402:	ba 17       	cp	r27, r26
    1404:	62 07       	cpc	r22, r18
    1406:	73 07       	cpc	r23, r19
    1408:	84 07       	cpc	r24, r20
    140a:	95 07       	cpc	r25, r21
    140c:	18 f0       	brcs	.+6      	; 0x1414 <__addsf3x+0x18>
    140e:	71 f4       	brne	.+28     	; 0x142c <__addsf3x+0x30>
    1410:	9e f5       	brtc	.+102    	; 0x1478 <__addsf3x+0x7c>
    1412:	8f c1       	rjmp	.+798    	; 0x1732 <__fp_zero>
    1414:	0e f4       	brtc	.+2      	; 0x1418 <__addsf3x+0x1c>
    1416:	e0 95       	com	r30
    1418:	0b 2e       	mov	r0, r27
    141a:	ba 2f       	mov	r27, r26
    141c:	a0 2d       	mov	r26, r0
    141e:	0b 01       	movw	r0, r22
    1420:	b9 01       	movw	r22, r18
    1422:	90 01       	movw	r18, r0
    1424:	0c 01       	movw	r0, r24
    1426:	ca 01       	movw	r24, r20
    1428:	a0 01       	movw	r20, r0
    142a:	11 24       	eor	r1, r1
    142c:	ff 27       	eor	r31, r31
    142e:	59 1b       	sub	r21, r25
    1430:	99 f0       	breq	.+38     	; 0x1458 <__addsf3x+0x5c>
    1432:	59 3f       	cpi	r21, 0xF9	; 249
    1434:	50 f4       	brcc	.+20     	; 0x144a <__addsf3x+0x4e>
    1436:	50 3e       	cpi	r21, 0xE0	; 224
    1438:	68 f1       	brcs	.+90     	; 0x1494 <__addsf3x+0x98>
    143a:	1a 16       	cp	r1, r26
    143c:	f0 40       	sbci	r31, 0x00	; 0
    143e:	a2 2f       	mov	r26, r18
    1440:	23 2f       	mov	r18, r19
    1442:	34 2f       	mov	r19, r20
    1444:	44 27       	eor	r20, r20
    1446:	58 5f       	subi	r21, 0xF8	; 248
    1448:	f3 cf       	rjmp	.-26     	; 0x1430 <__addsf3x+0x34>
    144a:	46 95       	lsr	r20
    144c:	37 95       	ror	r19
    144e:	27 95       	ror	r18
    1450:	a7 95       	ror	r26
    1452:	f0 40       	sbci	r31, 0x00	; 0
    1454:	53 95       	inc	r21
    1456:	c9 f7       	brne	.-14     	; 0x144a <__addsf3x+0x4e>
    1458:	7e f4       	brtc	.+30     	; 0x1478 <__addsf3x+0x7c>
    145a:	1f 16       	cp	r1, r31
    145c:	ba 0b       	sbc	r27, r26
    145e:	62 0b       	sbc	r22, r18
    1460:	73 0b       	sbc	r23, r19
    1462:	84 0b       	sbc	r24, r20
    1464:	ba f0       	brmi	.+46     	; 0x1494 <__addsf3x+0x98>
    1466:	91 50       	subi	r25, 0x01	; 1
    1468:	a1 f0       	breq	.+40     	; 0x1492 <__addsf3x+0x96>
    146a:	ff 0f       	add	r31, r31
    146c:	bb 1f       	adc	r27, r27
    146e:	66 1f       	adc	r22, r22
    1470:	77 1f       	adc	r23, r23
    1472:	88 1f       	adc	r24, r24
    1474:	c2 f7       	brpl	.-16     	; 0x1466 <__addsf3x+0x6a>
    1476:	0e c0       	rjmp	.+28     	; 0x1494 <__addsf3x+0x98>
    1478:	ba 0f       	add	r27, r26
    147a:	62 1f       	adc	r22, r18
    147c:	73 1f       	adc	r23, r19
    147e:	84 1f       	adc	r24, r20
    1480:	48 f4       	brcc	.+18     	; 0x1494 <__addsf3x+0x98>
    1482:	87 95       	ror	r24
    1484:	77 95       	ror	r23
    1486:	67 95       	ror	r22
    1488:	b7 95       	ror	r27
    148a:	f7 95       	ror	r31
    148c:	9e 3f       	cpi	r25, 0xFE	; 254
    148e:	08 f0       	brcs	.+2      	; 0x1492 <__addsf3x+0x96>
    1490:	b3 cf       	rjmp	.-154    	; 0x13f8 <__addsf3+0x1e>
    1492:	93 95       	inc	r25
    1494:	88 0f       	add	r24, r24
    1496:	08 f0       	brcs	.+2      	; 0x149a <__addsf3x+0x9e>
    1498:	99 27       	eor	r25, r25
    149a:	ee 0f       	add	r30, r30
    149c:	97 95       	ror	r25
    149e:	87 95       	ror	r24
    14a0:	08 95       	ret

000014a2 <__cmpsf2>:
    14a2:	d9 d0       	rcall	.+434    	; 0x1656 <__fp_cmp>
    14a4:	08 f4       	brcc	.+2      	; 0x14a8 <__cmpsf2+0x6>
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	08 95       	ret

000014aa <__divsf3>:
    14aa:	0c d0       	rcall	.+24     	; 0x14c4 <__divsf3x>
    14ac:	0f c1       	rjmp	.+542    	; 0x16cc <__fp_round>
    14ae:	07 d1       	rcall	.+526    	; 0x16be <__fp_pscB>
    14b0:	40 f0       	brcs	.+16     	; 0x14c2 <__divsf3+0x18>
    14b2:	fe d0       	rcall	.+508    	; 0x16b0 <__fp_pscA>
    14b4:	30 f0       	brcs	.+12     	; 0x14c2 <__divsf3+0x18>
    14b6:	21 f4       	brne	.+8      	; 0x14c0 <__divsf3+0x16>
    14b8:	5f 3f       	cpi	r21, 0xFF	; 255
    14ba:	19 f0       	breq	.+6      	; 0x14c2 <__divsf3+0x18>
    14bc:	f0 c0       	rjmp	.+480    	; 0x169e <__fp_inf>
    14be:	51 11       	cpse	r21, r1
    14c0:	39 c1       	rjmp	.+626    	; 0x1734 <__fp_szero>
    14c2:	f3 c0       	rjmp	.+486    	; 0x16aa <__fp_nan>

000014c4 <__divsf3x>:
    14c4:	14 d1       	rcall	.+552    	; 0x16ee <__fp_split3>
    14c6:	98 f3       	brcs	.-26     	; 0x14ae <__divsf3+0x4>

000014c8 <__divsf3_pse>:
    14c8:	99 23       	and	r25, r25
    14ca:	c9 f3       	breq	.-14     	; 0x14be <__divsf3+0x14>
    14cc:	55 23       	and	r21, r21
    14ce:	b1 f3       	breq	.-20     	; 0x14bc <__divsf3+0x12>
    14d0:	95 1b       	sub	r25, r21
    14d2:	55 0b       	sbc	r21, r21
    14d4:	bb 27       	eor	r27, r27
    14d6:	aa 27       	eor	r26, r26
    14d8:	62 17       	cp	r22, r18
    14da:	73 07       	cpc	r23, r19
    14dc:	84 07       	cpc	r24, r20
    14de:	38 f0       	brcs	.+14     	; 0x14ee <__divsf3_pse+0x26>
    14e0:	9f 5f       	subi	r25, 0xFF	; 255
    14e2:	5f 4f       	sbci	r21, 0xFF	; 255
    14e4:	22 0f       	add	r18, r18
    14e6:	33 1f       	adc	r19, r19
    14e8:	44 1f       	adc	r20, r20
    14ea:	aa 1f       	adc	r26, r26
    14ec:	a9 f3       	breq	.-22     	; 0x14d8 <__divsf3_pse+0x10>
    14ee:	33 d0       	rcall	.+102    	; 0x1556 <__divsf3_pse+0x8e>
    14f0:	0e 2e       	mov	r0, r30
    14f2:	3a f0       	brmi	.+14     	; 0x1502 <__divsf3_pse+0x3a>
    14f4:	e0 e8       	ldi	r30, 0x80	; 128
    14f6:	30 d0       	rcall	.+96     	; 0x1558 <__divsf3_pse+0x90>
    14f8:	91 50       	subi	r25, 0x01	; 1
    14fa:	50 40       	sbci	r21, 0x00	; 0
    14fc:	e6 95       	lsr	r30
    14fe:	00 1c       	adc	r0, r0
    1500:	ca f7       	brpl	.-14     	; 0x14f4 <__divsf3_pse+0x2c>
    1502:	29 d0       	rcall	.+82     	; 0x1556 <__divsf3_pse+0x8e>
    1504:	fe 2f       	mov	r31, r30
    1506:	27 d0       	rcall	.+78     	; 0x1556 <__divsf3_pse+0x8e>
    1508:	66 0f       	add	r22, r22
    150a:	77 1f       	adc	r23, r23
    150c:	88 1f       	adc	r24, r24
    150e:	bb 1f       	adc	r27, r27
    1510:	26 17       	cp	r18, r22
    1512:	37 07       	cpc	r19, r23
    1514:	48 07       	cpc	r20, r24
    1516:	ab 07       	cpc	r26, r27
    1518:	b0 e8       	ldi	r27, 0x80	; 128
    151a:	09 f0       	breq	.+2      	; 0x151e <__divsf3_pse+0x56>
    151c:	bb 0b       	sbc	r27, r27
    151e:	80 2d       	mov	r24, r0
    1520:	bf 01       	movw	r22, r30
    1522:	ff 27       	eor	r31, r31
    1524:	93 58       	subi	r25, 0x83	; 131
    1526:	5f 4f       	sbci	r21, 0xFF	; 255
    1528:	2a f0       	brmi	.+10     	; 0x1534 <__divsf3_pse+0x6c>
    152a:	9e 3f       	cpi	r25, 0xFE	; 254
    152c:	51 05       	cpc	r21, r1
    152e:	68 f0       	brcs	.+26     	; 0x154a <__divsf3_pse+0x82>
    1530:	b6 c0       	rjmp	.+364    	; 0x169e <__fp_inf>
    1532:	00 c1       	rjmp	.+512    	; 0x1734 <__fp_szero>
    1534:	5f 3f       	cpi	r21, 0xFF	; 255
    1536:	ec f3       	brlt	.-6      	; 0x1532 <__divsf3_pse+0x6a>
    1538:	98 3e       	cpi	r25, 0xE8	; 232
    153a:	dc f3       	brlt	.-10     	; 0x1532 <__divsf3_pse+0x6a>
    153c:	86 95       	lsr	r24
    153e:	77 95       	ror	r23
    1540:	67 95       	ror	r22
    1542:	b7 95       	ror	r27
    1544:	f7 95       	ror	r31
    1546:	9f 5f       	subi	r25, 0xFF	; 255
    1548:	c9 f7       	brne	.-14     	; 0x153c <__divsf3_pse+0x74>
    154a:	88 0f       	add	r24, r24
    154c:	91 1d       	adc	r25, r1
    154e:	96 95       	lsr	r25
    1550:	87 95       	ror	r24
    1552:	97 f9       	bld	r25, 7
    1554:	08 95       	ret
    1556:	e1 e0       	ldi	r30, 0x01	; 1
    1558:	66 0f       	add	r22, r22
    155a:	77 1f       	adc	r23, r23
    155c:	88 1f       	adc	r24, r24
    155e:	bb 1f       	adc	r27, r27
    1560:	62 17       	cp	r22, r18
    1562:	73 07       	cpc	r23, r19
    1564:	84 07       	cpc	r24, r20
    1566:	ba 07       	cpc	r27, r26
    1568:	20 f0       	brcs	.+8      	; 0x1572 <__divsf3_pse+0xaa>
    156a:	62 1b       	sub	r22, r18
    156c:	73 0b       	sbc	r23, r19
    156e:	84 0b       	sbc	r24, r20
    1570:	ba 0b       	sbc	r27, r26
    1572:	ee 1f       	adc	r30, r30
    1574:	88 f7       	brcc	.-30     	; 0x1558 <__divsf3_pse+0x90>
    1576:	e0 95       	com	r30
    1578:	08 95       	ret

0000157a <__fixsfsi>:
    157a:	04 d0       	rcall	.+8      	; 0x1584 <__fixunssfsi>
    157c:	68 94       	set
    157e:	b1 11       	cpse	r27, r1
    1580:	d9 c0       	rjmp	.+434    	; 0x1734 <__fp_szero>
    1582:	08 95       	ret

00001584 <__fixunssfsi>:
    1584:	bc d0       	rcall	.+376    	; 0x16fe <__fp_splitA>
    1586:	88 f0       	brcs	.+34     	; 0x15aa <__fixunssfsi+0x26>
    1588:	9f 57       	subi	r25, 0x7F	; 127
    158a:	90 f0       	brcs	.+36     	; 0x15b0 <__fixunssfsi+0x2c>
    158c:	b9 2f       	mov	r27, r25
    158e:	99 27       	eor	r25, r25
    1590:	b7 51       	subi	r27, 0x17	; 23
    1592:	a0 f0       	brcs	.+40     	; 0x15bc <__fixunssfsi+0x38>
    1594:	d1 f0       	breq	.+52     	; 0x15ca <__fixunssfsi+0x46>
    1596:	66 0f       	add	r22, r22
    1598:	77 1f       	adc	r23, r23
    159a:	88 1f       	adc	r24, r24
    159c:	99 1f       	adc	r25, r25
    159e:	1a f0       	brmi	.+6      	; 0x15a6 <__fixunssfsi+0x22>
    15a0:	ba 95       	dec	r27
    15a2:	c9 f7       	brne	.-14     	; 0x1596 <__fixunssfsi+0x12>
    15a4:	12 c0       	rjmp	.+36     	; 0x15ca <__fixunssfsi+0x46>
    15a6:	b1 30       	cpi	r27, 0x01	; 1
    15a8:	81 f0       	breq	.+32     	; 0x15ca <__fixunssfsi+0x46>
    15aa:	c3 d0       	rcall	.+390    	; 0x1732 <__fp_zero>
    15ac:	b1 e0       	ldi	r27, 0x01	; 1
    15ae:	08 95       	ret
    15b0:	c0 c0       	rjmp	.+384    	; 0x1732 <__fp_zero>
    15b2:	67 2f       	mov	r22, r23
    15b4:	78 2f       	mov	r23, r24
    15b6:	88 27       	eor	r24, r24
    15b8:	b8 5f       	subi	r27, 0xF8	; 248
    15ba:	39 f0       	breq	.+14     	; 0x15ca <__fixunssfsi+0x46>
    15bc:	b9 3f       	cpi	r27, 0xF9	; 249
    15be:	cc f3       	brlt	.-14     	; 0x15b2 <__fixunssfsi+0x2e>
    15c0:	86 95       	lsr	r24
    15c2:	77 95       	ror	r23
    15c4:	67 95       	ror	r22
    15c6:	b3 95       	inc	r27
    15c8:	d9 f7       	brne	.-10     	; 0x15c0 <__fixunssfsi+0x3c>
    15ca:	3e f4       	brtc	.+14     	; 0x15da <__fixunssfsi+0x56>
    15cc:	90 95       	com	r25
    15ce:	80 95       	com	r24
    15d0:	70 95       	com	r23
    15d2:	61 95       	neg	r22
    15d4:	7f 4f       	sbci	r23, 0xFF	; 255
    15d6:	8f 4f       	sbci	r24, 0xFF	; 255
    15d8:	9f 4f       	sbci	r25, 0xFF	; 255
    15da:	08 95       	ret

000015dc <__floatunsisf>:
    15dc:	e8 94       	clt
    15de:	09 c0       	rjmp	.+18     	; 0x15f2 <__floatsisf+0x12>

000015e0 <__floatsisf>:
    15e0:	97 fb       	bst	r25, 7
    15e2:	3e f4       	brtc	.+14     	; 0x15f2 <__floatsisf+0x12>
    15e4:	90 95       	com	r25
    15e6:	80 95       	com	r24
    15e8:	70 95       	com	r23
    15ea:	61 95       	neg	r22
    15ec:	7f 4f       	sbci	r23, 0xFF	; 255
    15ee:	8f 4f       	sbci	r24, 0xFF	; 255
    15f0:	9f 4f       	sbci	r25, 0xFF	; 255
    15f2:	99 23       	and	r25, r25
    15f4:	a9 f0       	breq	.+42     	; 0x1620 <__floatsisf+0x40>
    15f6:	f9 2f       	mov	r31, r25
    15f8:	96 e9       	ldi	r25, 0x96	; 150
    15fa:	bb 27       	eor	r27, r27
    15fc:	93 95       	inc	r25
    15fe:	f6 95       	lsr	r31
    1600:	87 95       	ror	r24
    1602:	77 95       	ror	r23
    1604:	67 95       	ror	r22
    1606:	b7 95       	ror	r27
    1608:	f1 11       	cpse	r31, r1
    160a:	f8 cf       	rjmp	.-16     	; 0x15fc <__floatsisf+0x1c>
    160c:	fa f4       	brpl	.+62     	; 0x164c <__floatsisf+0x6c>
    160e:	bb 0f       	add	r27, r27
    1610:	11 f4       	brne	.+4      	; 0x1616 <__floatsisf+0x36>
    1612:	60 ff       	sbrs	r22, 0
    1614:	1b c0       	rjmp	.+54     	; 0x164c <__floatsisf+0x6c>
    1616:	6f 5f       	subi	r22, 0xFF	; 255
    1618:	7f 4f       	sbci	r23, 0xFF	; 255
    161a:	8f 4f       	sbci	r24, 0xFF	; 255
    161c:	9f 4f       	sbci	r25, 0xFF	; 255
    161e:	16 c0       	rjmp	.+44     	; 0x164c <__floatsisf+0x6c>
    1620:	88 23       	and	r24, r24
    1622:	11 f0       	breq	.+4      	; 0x1628 <__floatsisf+0x48>
    1624:	96 e9       	ldi	r25, 0x96	; 150
    1626:	11 c0       	rjmp	.+34     	; 0x164a <__floatsisf+0x6a>
    1628:	77 23       	and	r23, r23
    162a:	21 f0       	breq	.+8      	; 0x1634 <__floatsisf+0x54>
    162c:	9e e8       	ldi	r25, 0x8E	; 142
    162e:	87 2f       	mov	r24, r23
    1630:	76 2f       	mov	r23, r22
    1632:	05 c0       	rjmp	.+10     	; 0x163e <__floatsisf+0x5e>
    1634:	66 23       	and	r22, r22
    1636:	71 f0       	breq	.+28     	; 0x1654 <__floatsisf+0x74>
    1638:	96 e8       	ldi	r25, 0x86	; 134
    163a:	86 2f       	mov	r24, r22
    163c:	70 e0       	ldi	r23, 0x00	; 0
    163e:	60 e0       	ldi	r22, 0x00	; 0
    1640:	2a f0       	brmi	.+10     	; 0x164c <__floatsisf+0x6c>
    1642:	9a 95       	dec	r25
    1644:	66 0f       	add	r22, r22
    1646:	77 1f       	adc	r23, r23
    1648:	88 1f       	adc	r24, r24
    164a:	da f7       	brpl	.-10     	; 0x1642 <__floatsisf+0x62>
    164c:	88 0f       	add	r24, r24
    164e:	96 95       	lsr	r25
    1650:	87 95       	ror	r24
    1652:	97 f9       	bld	r25, 7
    1654:	08 95       	ret

00001656 <__fp_cmp>:
    1656:	99 0f       	add	r25, r25
    1658:	00 08       	sbc	r0, r0
    165a:	55 0f       	add	r21, r21
    165c:	aa 0b       	sbc	r26, r26
    165e:	e0 e8       	ldi	r30, 0x80	; 128
    1660:	fe ef       	ldi	r31, 0xFE	; 254
    1662:	16 16       	cp	r1, r22
    1664:	17 06       	cpc	r1, r23
    1666:	e8 07       	cpc	r30, r24
    1668:	f9 07       	cpc	r31, r25
    166a:	c0 f0       	brcs	.+48     	; 0x169c <__fp_cmp+0x46>
    166c:	12 16       	cp	r1, r18
    166e:	13 06       	cpc	r1, r19
    1670:	e4 07       	cpc	r30, r20
    1672:	f5 07       	cpc	r31, r21
    1674:	98 f0       	brcs	.+38     	; 0x169c <__fp_cmp+0x46>
    1676:	62 1b       	sub	r22, r18
    1678:	73 0b       	sbc	r23, r19
    167a:	84 0b       	sbc	r24, r20
    167c:	95 0b       	sbc	r25, r21
    167e:	39 f4       	brne	.+14     	; 0x168e <__fp_cmp+0x38>
    1680:	0a 26       	eor	r0, r26
    1682:	61 f0       	breq	.+24     	; 0x169c <__fp_cmp+0x46>
    1684:	23 2b       	or	r18, r19
    1686:	24 2b       	or	r18, r20
    1688:	25 2b       	or	r18, r21
    168a:	21 f4       	brne	.+8      	; 0x1694 <__fp_cmp+0x3e>
    168c:	08 95       	ret
    168e:	0a 26       	eor	r0, r26
    1690:	09 f4       	brne	.+2      	; 0x1694 <__fp_cmp+0x3e>
    1692:	a1 40       	sbci	r26, 0x01	; 1
    1694:	a6 95       	lsr	r26
    1696:	8f ef       	ldi	r24, 0xFF	; 255
    1698:	81 1d       	adc	r24, r1
    169a:	81 1d       	adc	r24, r1
    169c:	08 95       	ret

0000169e <__fp_inf>:
    169e:	97 f9       	bld	r25, 7
    16a0:	9f 67       	ori	r25, 0x7F	; 127
    16a2:	80 e8       	ldi	r24, 0x80	; 128
    16a4:	70 e0       	ldi	r23, 0x00	; 0
    16a6:	60 e0       	ldi	r22, 0x00	; 0
    16a8:	08 95       	ret

000016aa <__fp_nan>:
    16aa:	9f ef       	ldi	r25, 0xFF	; 255
    16ac:	80 ec       	ldi	r24, 0xC0	; 192
    16ae:	08 95       	ret

000016b0 <__fp_pscA>:
    16b0:	00 24       	eor	r0, r0
    16b2:	0a 94       	dec	r0
    16b4:	16 16       	cp	r1, r22
    16b6:	17 06       	cpc	r1, r23
    16b8:	18 06       	cpc	r1, r24
    16ba:	09 06       	cpc	r0, r25
    16bc:	08 95       	ret

000016be <__fp_pscB>:
    16be:	00 24       	eor	r0, r0
    16c0:	0a 94       	dec	r0
    16c2:	12 16       	cp	r1, r18
    16c4:	13 06       	cpc	r1, r19
    16c6:	14 06       	cpc	r1, r20
    16c8:	05 06       	cpc	r0, r21
    16ca:	08 95       	ret

000016cc <__fp_round>:
    16cc:	09 2e       	mov	r0, r25
    16ce:	03 94       	inc	r0
    16d0:	00 0c       	add	r0, r0
    16d2:	11 f4       	brne	.+4      	; 0x16d8 <__fp_round+0xc>
    16d4:	88 23       	and	r24, r24
    16d6:	52 f0       	brmi	.+20     	; 0x16ec <__fp_round+0x20>
    16d8:	bb 0f       	add	r27, r27
    16da:	40 f4       	brcc	.+16     	; 0x16ec <__fp_round+0x20>
    16dc:	bf 2b       	or	r27, r31
    16de:	11 f4       	brne	.+4      	; 0x16e4 <__fp_round+0x18>
    16e0:	60 ff       	sbrs	r22, 0
    16e2:	04 c0       	rjmp	.+8      	; 0x16ec <__fp_round+0x20>
    16e4:	6f 5f       	subi	r22, 0xFF	; 255
    16e6:	7f 4f       	sbci	r23, 0xFF	; 255
    16e8:	8f 4f       	sbci	r24, 0xFF	; 255
    16ea:	9f 4f       	sbci	r25, 0xFF	; 255
    16ec:	08 95       	ret

000016ee <__fp_split3>:
    16ee:	57 fd       	sbrc	r21, 7
    16f0:	90 58       	subi	r25, 0x80	; 128
    16f2:	44 0f       	add	r20, r20
    16f4:	55 1f       	adc	r21, r21
    16f6:	59 f0       	breq	.+22     	; 0x170e <__fp_splitA+0x10>
    16f8:	5f 3f       	cpi	r21, 0xFF	; 255
    16fa:	71 f0       	breq	.+28     	; 0x1718 <__fp_splitA+0x1a>
    16fc:	47 95       	ror	r20

000016fe <__fp_splitA>:
    16fe:	88 0f       	add	r24, r24
    1700:	97 fb       	bst	r25, 7
    1702:	99 1f       	adc	r25, r25
    1704:	61 f0       	breq	.+24     	; 0x171e <__fp_splitA+0x20>
    1706:	9f 3f       	cpi	r25, 0xFF	; 255
    1708:	79 f0       	breq	.+30     	; 0x1728 <__fp_splitA+0x2a>
    170a:	87 95       	ror	r24
    170c:	08 95       	ret
    170e:	12 16       	cp	r1, r18
    1710:	13 06       	cpc	r1, r19
    1712:	14 06       	cpc	r1, r20
    1714:	55 1f       	adc	r21, r21
    1716:	f2 cf       	rjmp	.-28     	; 0x16fc <__fp_split3+0xe>
    1718:	46 95       	lsr	r20
    171a:	f1 df       	rcall	.-30     	; 0x16fe <__fp_splitA>
    171c:	08 c0       	rjmp	.+16     	; 0x172e <__fp_splitA+0x30>
    171e:	16 16       	cp	r1, r22
    1720:	17 06       	cpc	r1, r23
    1722:	18 06       	cpc	r1, r24
    1724:	99 1f       	adc	r25, r25
    1726:	f1 cf       	rjmp	.-30     	; 0x170a <__fp_splitA+0xc>
    1728:	86 95       	lsr	r24
    172a:	71 05       	cpc	r23, r1
    172c:	61 05       	cpc	r22, r1
    172e:	08 94       	sec
    1730:	08 95       	ret

00001732 <__fp_zero>:
    1732:	e8 94       	clt

00001734 <__fp_szero>:
    1734:	bb 27       	eor	r27, r27
    1736:	66 27       	eor	r22, r22
    1738:	77 27       	eor	r23, r23
    173a:	cb 01       	movw	r24, r22
    173c:	97 f9       	bld	r25, 7
    173e:	08 95       	ret

00001740 <__mulsf3>:
    1740:	0b d0       	rcall	.+22     	; 0x1758 <__mulsf3x>
    1742:	c4 cf       	rjmp	.-120    	; 0x16cc <__fp_round>
    1744:	b5 df       	rcall	.-150    	; 0x16b0 <__fp_pscA>
    1746:	28 f0       	brcs	.+10     	; 0x1752 <__mulsf3+0x12>
    1748:	ba df       	rcall	.-140    	; 0x16be <__fp_pscB>
    174a:	18 f0       	brcs	.+6      	; 0x1752 <__mulsf3+0x12>
    174c:	95 23       	and	r25, r21
    174e:	09 f0       	breq	.+2      	; 0x1752 <__mulsf3+0x12>
    1750:	a6 cf       	rjmp	.-180    	; 0x169e <__fp_inf>
    1752:	ab cf       	rjmp	.-170    	; 0x16aa <__fp_nan>
    1754:	11 24       	eor	r1, r1
    1756:	ee cf       	rjmp	.-36     	; 0x1734 <__fp_szero>

00001758 <__mulsf3x>:
    1758:	ca df       	rcall	.-108    	; 0x16ee <__fp_split3>
    175a:	a0 f3       	brcs	.-24     	; 0x1744 <__mulsf3+0x4>

0000175c <__mulsf3_pse>:
    175c:	95 9f       	mul	r25, r21
    175e:	d1 f3       	breq	.-12     	; 0x1754 <__mulsf3+0x14>
    1760:	95 0f       	add	r25, r21
    1762:	50 e0       	ldi	r21, 0x00	; 0
    1764:	55 1f       	adc	r21, r21
    1766:	62 9f       	mul	r22, r18
    1768:	f0 01       	movw	r30, r0
    176a:	72 9f       	mul	r23, r18
    176c:	bb 27       	eor	r27, r27
    176e:	f0 0d       	add	r31, r0
    1770:	b1 1d       	adc	r27, r1
    1772:	63 9f       	mul	r22, r19
    1774:	aa 27       	eor	r26, r26
    1776:	f0 0d       	add	r31, r0
    1778:	b1 1d       	adc	r27, r1
    177a:	aa 1f       	adc	r26, r26
    177c:	64 9f       	mul	r22, r20
    177e:	66 27       	eor	r22, r22
    1780:	b0 0d       	add	r27, r0
    1782:	a1 1d       	adc	r26, r1
    1784:	66 1f       	adc	r22, r22
    1786:	82 9f       	mul	r24, r18
    1788:	22 27       	eor	r18, r18
    178a:	b0 0d       	add	r27, r0
    178c:	a1 1d       	adc	r26, r1
    178e:	62 1f       	adc	r22, r18
    1790:	73 9f       	mul	r23, r19
    1792:	b0 0d       	add	r27, r0
    1794:	a1 1d       	adc	r26, r1
    1796:	62 1f       	adc	r22, r18
    1798:	83 9f       	mul	r24, r19
    179a:	a0 0d       	add	r26, r0
    179c:	61 1d       	adc	r22, r1
    179e:	22 1f       	adc	r18, r18
    17a0:	74 9f       	mul	r23, r20
    17a2:	33 27       	eor	r19, r19
    17a4:	a0 0d       	add	r26, r0
    17a6:	61 1d       	adc	r22, r1
    17a8:	23 1f       	adc	r18, r19
    17aa:	84 9f       	mul	r24, r20
    17ac:	60 0d       	add	r22, r0
    17ae:	21 1d       	adc	r18, r1
    17b0:	82 2f       	mov	r24, r18
    17b2:	76 2f       	mov	r23, r22
    17b4:	6a 2f       	mov	r22, r26
    17b6:	11 24       	eor	r1, r1
    17b8:	9f 57       	subi	r25, 0x7F	; 127
    17ba:	50 40       	sbci	r21, 0x00	; 0
    17bc:	8a f0       	brmi	.+34     	; 0x17e0 <__mulsf3_pse+0x84>
    17be:	e1 f0       	breq	.+56     	; 0x17f8 <__mulsf3_pse+0x9c>
    17c0:	88 23       	and	r24, r24
    17c2:	4a f0       	brmi	.+18     	; 0x17d6 <__mulsf3_pse+0x7a>
    17c4:	ee 0f       	add	r30, r30
    17c6:	ff 1f       	adc	r31, r31
    17c8:	bb 1f       	adc	r27, r27
    17ca:	66 1f       	adc	r22, r22
    17cc:	77 1f       	adc	r23, r23
    17ce:	88 1f       	adc	r24, r24
    17d0:	91 50       	subi	r25, 0x01	; 1
    17d2:	50 40       	sbci	r21, 0x00	; 0
    17d4:	a9 f7       	brne	.-22     	; 0x17c0 <__mulsf3_pse+0x64>
    17d6:	9e 3f       	cpi	r25, 0xFE	; 254
    17d8:	51 05       	cpc	r21, r1
    17da:	70 f0       	brcs	.+28     	; 0x17f8 <__mulsf3_pse+0x9c>
    17dc:	60 cf       	rjmp	.-320    	; 0x169e <__fp_inf>
    17de:	aa cf       	rjmp	.-172    	; 0x1734 <__fp_szero>
    17e0:	5f 3f       	cpi	r21, 0xFF	; 255
    17e2:	ec f3       	brlt	.-6      	; 0x17de <__mulsf3_pse+0x82>
    17e4:	98 3e       	cpi	r25, 0xE8	; 232
    17e6:	dc f3       	brlt	.-10     	; 0x17de <__mulsf3_pse+0x82>
    17e8:	86 95       	lsr	r24
    17ea:	77 95       	ror	r23
    17ec:	67 95       	ror	r22
    17ee:	b7 95       	ror	r27
    17f0:	f7 95       	ror	r31
    17f2:	e7 95       	ror	r30
    17f4:	9f 5f       	subi	r25, 0xFF	; 255
    17f6:	c1 f7       	brne	.-16     	; 0x17e8 <__mulsf3_pse+0x8c>
    17f8:	fe 2b       	or	r31, r30
    17fa:	88 0f       	add	r24, r24
    17fc:	91 1d       	adc	r25, r1
    17fe:	96 95       	lsr	r25
    1800:	87 95       	ror	r24
    1802:	97 f9       	bld	r25, 7
    1804:	08 95       	ret
    1806:	11 f4       	brne	.+4      	; 0x180c <__mulsf3_pse+0xb0>
    1808:	0e f4       	brtc	.+2      	; 0x180c <__mulsf3_pse+0xb0>
    180a:	4f cf       	rjmp	.-354    	; 0x16aa <__fp_nan>
    180c:	3e c0       	rjmp	.+124    	; 0x188a <__fp_mpack>

0000180e <sqrt>:
    180e:	77 df       	rcall	.-274    	; 0x16fe <__fp_splitA>
    1810:	d0 f3       	brcs	.-12     	; 0x1806 <__mulsf3_pse+0xaa>
    1812:	99 23       	and	r25, r25
    1814:	d9 f3       	breq	.-10     	; 0x180c <__mulsf3_pse+0xb0>
    1816:	ce f3       	brts	.-14     	; 0x180a <__mulsf3_pse+0xae>
    1818:	9f 57       	subi	r25, 0x7F	; 127
    181a:	55 0b       	sbc	r21, r21
    181c:	87 ff       	sbrs	r24, 7
    181e:	43 d0       	rcall	.+134    	; 0x18a6 <__fp_norm2>
    1820:	00 24       	eor	r0, r0
    1822:	a0 e6       	ldi	r26, 0x60	; 96
    1824:	40 ea       	ldi	r20, 0xA0	; 160
    1826:	90 01       	movw	r18, r0
    1828:	80 58       	subi	r24, 0x80	; 128
    182a:	56 95       	lsr	r21
    182c:	97 95       	ror	r25
    182e:	28 f4       	brcc	.+10     	; 0x183a <sqrt+0x2c>
    1830:	80 5c       	subi	r24, 0xC0	; 192
    1832:	66 0f       	add	r22, r22
    1834:	77 1f       	adc	r23, r23
    1836:	88 1f       	adc	r24, r24
    1838:	20 f0       	brcs	.+8      	; 0x1842 <sqrt+0x34>
    183a:	26 17       	cp	r18, r22
    183c:	37 07       	cpc	r19, r23
    183e:	48 07       	cpc	r20, r24
    1840:	30 f4       	brcc	.+12     	; 0x184e <sqrt+0x40>
    1842:	62 1b       	sub	r22, r18
    1844:	73 0b       	sbc	r23, r19
    1846:	84 0b       	sbc	r24, r20
    1848:	20 29       	or	r18, r0
    184a:	31 29       	or	r19, r1
    184c:	4a 2b       	or	r20, r26
    184e:	a6 95       	lsr	r26
    1850:	17 94       	ror	r1
    1852:	07 94       	ror	r0
    1854:	20 25       	eor	r18, r0
    1856:	31 25       	eor	r19, r1
    1858:	4a 27       	eor	r20, r26
    185a:	58 f7       	brcc	.-42     	; 0x1832 <sqrt+0x24>
    185c:	66 0f       	add	r22, r22
    185e:	77 1f       	adc	r23, r23
    1860:	88 1f       	adc	r24, r24
    1862:	20 f0       	brcs	.+8      	; 0x186c <sqrt+0x5e>
    1864:	26 17       	cp	r18, r22
    1866:	37 07       	cpc	r19, r23
    1868:	48 07       	cpc	r20, r24
    186a:	30 f4       	brcc	.+12     	; 0x1878 <sqrt+0x6a>
    186c:	62 0b       	sbc	r22, r18
    186e:	73 0b       	sbc	r23, r19
    1870:	84 0b       	sbc	r24, r20
    1872:	20 0d       	add	r18, r0
    1874:	31 1d       	adc	r19, r1
    1876:	41 1d       	adc	r20, r1
    1878:	a0 95       	com	r26
    187a:	81 f7       	brne	.-32     	; 0x185c <sqrt+0x4e>
    187c:	b9 01       	movw	r22, r18
    187e:	84 2f       	mov	r24, r20
    1880:	91 58       	subi	r25, 0x81	; 129
    1882:	88 0f       	add	r24, r24
    1884:	96 95       	lsr	r25
    1886:	87 95       	ror	r24
    1888:	08 95       	ret

0000188a <__fp_mpack>:
    188a:	9f 3f       	cpi	r25, 0xFF	; 255
    188c:	31 f0       	breq	.+12     	; 0x189a <__fp_mpack_finite+0xc>

0000188e <__fp_mpack_finite>:
    188e:	91 50       	subi	r25, 0x01	; 1
    1890:	20 f4       	brcc	.+8      	; 0x189a <__fp_mpack_finite+0xc>
    1892:	87 95       	ror	r24
    1894:	77 95       	ror	r23
    1896:	67 95       	ror	r22
    1898:	b7 95       	ror	r27
    189a:	88 0f       	add	r24, r24
    189c:	91 1d       	adc	r25, r1
    189e:	96 95       	lsr	r25
    18a0:	87 95       	ror	r24
    18a2:	97 f9       	bld	r25, 7
    18a4:	08 95       	ret

000018a6 <__fp_norm2>:
    18a6:	91 50       	subi	r25, 0x01	; 1
    18a8:	50 40       	sbci	r21, 0x00	; 0
    18aa:	66 0f       	add	r22, r22
    18ac:	77 1f       	adc	r23, r23
    18ae:	88 1f       	adc	r24, r24
    18b0:	d2 f7       	brpl	.-12     	; 0x18a6 <__fp_norm2>
    18b2:	08 95       	ret

000018b4 <__udivmodsi4>:
    18b4:	a1 e2       	ldi	r26, 0x21	; 33
    18b6:	1a 2e       	mov	r1, r26
    18b8:	aa 1b       	sub	r26, r26
    18ba:	bb 1b       	sub	r27, r27
    18bc:	fd 01       	movw	r30, r26
    18be:	0d c0       	rjmp	.+26     	; 0x18da <__udivmodsi4_ep>

000018c0 <__udivmodsi4_loop>:
    18c0:	aa 1f       	adc	r26, r26
    18c2:	bb 1f       	adc	r27, r27
    18c4:	ee 1f       	adc	r30, r30
    18c6:	ff 1f       	adc	r31, r31
    18c8:	a2 17       	cp	r26, r18
    18ca:	b3 07       	cpc	r27, r19
    18cc:	e4 07       	cpc	r30, r20
    18ce:	f5 07       	cpc	r31, r21
    18d0:	20 f0       	brcs	.+8      	; 0x18da <__udivmodsi4_ep>
    18d2:	a2 1b       	sub	r26, r18
    18d4:	b3 0b       	sbc	r27, r19
    18d6:	e4 0b       	sbc	r30, r20
    18d8:	f5 0b       	sbc	r31, r21

000018da <__udivmodsi4_ep>:
    18da:	66 1f       	adc	r22, r22
    18dc:	77 1f       	adc	r23, r23
    18de:	88 1f       	adc	r24, r24
    18e0:	99 1f       	adc	r25, r25
    18e2:	1a 94       	dec	r1
    18e4:	69 f7       	brne	.-38     	; 0x18c0 <__udivmodsi4_loop>
    18e6:	60 95       	com	r22
    18e8:	70 95       	com	r23
    18ea:	80 95       	com	r24
    18ec:	90 95       	com	r25
    18ee:	9b 01       	movw	r18, r22
    18f0:	ac 01       	movw	r20, r24
    18f2:	bd 01       	movw	r22, r26
    18f4:	cf 01       	movw	r24, r30
    18f6:	08 95       	ret

000018f8 <__itoa_ncheck>:
    18f8:	bb 27       	eor	r27, r27
    18fa:	4a 30       	cpi	r20, 0x0A	; 10
    18fc:	31 f4       	brne	.+12     	; 0x190a <__itoa_ncheck+0x12>
    18fe:	99 23       	and	r25, r25
    1900:	22 f4       	brpl	.+8      	; 0x190a <__itoa_ncheck+0x12>
    1902:	bd e2       	ldi	r27, 0x2D	; 45
    1904:	90 95       	com	r25
    1906:	81 95       	neg	r24
    1908:	9f 4f       	sbci	r25, 0xFF	; 255
    190a:	01 c0       	rjmp	.+2      	; 0x190e <__utoa_common>

0000190c <__utoa_ncheck>:
    190c:	bb 27       	eor	r27, r27

0000190e <__utoa_common>:
    190e:	fb 01       	movw	r30, r22
    1910:	55 27       	eor	r21, r21
    1912:	aa 27       	eor	r26, r26
    1914:	88 0f       	add	r24, r24
    1916:	99 1f       	adc	r25, r25
    1918:	aa 1f       	adc	r26, r26
    191a:	a4 17       	cp	r26, r20
    191c:	10 f0       	brcs	.+4      	; 0x1922 <__utoa_common+0x14>
    191e:	a4 1b       	sub	r26, r20
    1920:	83 95       	inc	r24
    1922:	50 51       	subi	r21, 0x10	; 16
    1924:	b9 f7       	brne	.-18     	; 0x1914 <__utoa_common+0x6>
    1926:	a0 5d       	subi	r26, 0xD0	; 208
    1928:	aa 33       	cpi	r26, 0x3A	; 58
    192a:	08 f0       	brcs	.+2      	; 0x192e <__utoa_common+0x20>
    192c:	a9 5d       	subi	r26, 0xD9	; 217
    192e:	a1 93       	st	Z+, r26
    1930:	00 97       	sbiw	r24, 0x00	; 0
    1932:	79 f7       	brne	.-34     	; 0x1912 <__utoa_common+0x4>
    1934:	b1 11       	cpse	r27, r1
    1936:	b1 93       	st	Z+, r27
    1938:	11 92       	st	Z+, r1
    193a:	cb 01       	movw	r24, r22
    193c:	00 c0       	rjmp	.+0      	; 0x193e <strrev>

0000193e <strrev>:
    193e:	dc 01       	movw	r26, r24
    1940:	fc 01       	movw	r30, r24
    1942:	67 2f       	mov	r22, r23
    1944:	71 91       	ld	r23, Z+
    1946:	77 23       	and	r23, r23
    1948:	e1 f7       	brne	.-8      	; 0x1942 <strrev+0x4>
    194a:	32 97       	sbiw	r30, 0x02	; 2
    194c:	04 c0       	rjmp	.+8      	; 0x1956 <strrev+0x18>
    194e:	7c 91       	ld	r23, X
    1950:	6d 93       	st	X+, r22
    1952:	70 83       	st	Z, r23
    1954:	62 91       	ld	r22, -Z
    1956:	ae 17       	cp	r26, r30
    1958:	bf 07       	cpc	r27, r31
    195a:	c8 f3       	brcs	.-14     	; 0x194e <strrev+0x10>
    195c:	08 95       	ret

0000195e <_exit>:
    195e:	f8 94       	cli

00001960 <__stop_program>:
    1960:	ff cf       	rjmp	.-2      	; 0x1960 <__stop_program>
